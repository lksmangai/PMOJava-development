{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\backlog-practice\\backlog-practice.route.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\backlog-practice\\backlog-practice.route.ts","mtime":1561379309083},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a;\r\nconst core_1 = require(\"@angular/core\");\r\nconst core_2 = require(\"app/core\");\r\nconst rxjs_1 = require(\"rxjs\");\r\nconst operators_1 = require(\"rxjs/operators\");\r\nconst backlog_practice_model_1 = require(\"app/shared/model/backlog-practice.model\");\r\nconst backlog_practice_service_1 = require(\"./backlog-practice.service\");\r\nconst backlog_practice_component_1 = require(\"./backlog-practice.component\");\r\nconst backlog_practice_detail_component_1 = require(\"./backlog-practice-detail.component\");\r\nconst backlog_practice_update_component_1 = require(\"./backlog-practice-update.component\");\r\nconst backlog_practice_delete_dialog_component_1 = require(\"./backlog-practice-delete-dialog.component\");\r\nlet BacklogPracticeResolve = class BacklogPracticeResolve {\r\n    constructor(service) {\r\n        this.service = service;\r\n    }\r\n    resolve(route, state) {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(operators_1.filter((response) => response.ok), operators_1.map((backlogPractice) => backlogPractice.body));\r\n        }\r\n        return rxjs_1.of(new backlog_practice_model_1.BacklogPractice());\r\n    }\r\n};\r\nBacklogPracticeResolve = tslib_1.__decorate([\r\n    core_1.Injectable({ providedIn: 'root' }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof backlog_practice_service_1.BacklogPracticeService !== \"undefined\" && backlog_practice_service_1.BacklogPracticeService) === \"function\" ? _a : Object])\r\n], BacklogPracticeResolve);\r\nexports.BacklogPracticeResolve = BacklogPracticeResolve;\r\nexports.backlogPracticeRoute = [\r\n    {\r\n        path: '',\r\n        component: backlog_practice_component_1.BacklogPracticeComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'App.backlogPractice.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: backlog_practice_detail_component_1.BacklogPracticeDetailComponent,\r\n        resolve: {\r\n            backlogPractice: BacklogPracticeResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'App.backlogPractice.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: backlog_practice_update_component_1.BacklogPracticeUpdateComponent,\r\n        resolve: {\r\n            backlogPractice: BacklogPracticeResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'App.backlogPractice.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: backlog_practice_update_component_1.BacklogPracticeUpdateComponent,\r\n        resolve: {\r\n            backlogPractice: BacklogPracticeResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'App.backlogPractice.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    }\r\n];\r\nexports.backlogPracticePopupRoute = [\r\n    {\r\n        path: ':id/delete',\r\n        component: backlog_practice_delete_dialog_component_1.BacklogPracticeDeletePopupComponent,\r\n        resolve: {\r\n            backlogPractice: BacklogPracticeResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'App.backlogPractice.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\backlog-practice\\backlog-practice.route.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\backlog-practice\\backlog-practice.route.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAG3C,mCAAkD;AAClD,+BAAsC;AACtC,8CAA6C;AAC7C,oFAA0E;AAC1E,yEAAoE;AACpE,6EAAwE;AACxE,2FAAqF;AACrF,2FAAqF;AACrF,yGAAiG;AAIjG,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IACjC,YAAoB,OAA+B;QAA/B,YAAO,GAAP,OAAO,CAAwB;IAAG,CAAC;IAEvD,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC/D,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,IAAI,EAAE,EAAE;YACN,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAC/B,kBAAM,CAAC,CAAC,QAAuC,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAChE,eAAG,CAAC,CAAC,eAA8C,EAAE,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAC9E,CAAC;SACH;QACD,OAAO,SAAE,CAAC,IAAI,wCAAe,EAAE,CAAC,CAAC;IACnC,CAAC;CACF,CAAA;AAbY,sBAAsB;IADlC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAEJ,iDAAsB,oBAAtB,iDAAsB;GADxC,sBAAsB,CAalC;AAbY,wDAAsB;AAetB,QAAA,oBAAoB,GAAW;IAC1C;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAwB;QACnC,IAAI,EAAE;YACJ,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,gCAAgC;SAC5C;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACtC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,kEAA8B;QACzC,OAAO,EAAE;YACP,eAAe,EAAE,sBAAsB;SACxC;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,gCAAgC;SAC5C;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACtC;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,kEAA8B;QACzC,OAAO,EAAE;YACP,eAAe,EAAE,sBAAsB;SACxC;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,gCAAgC;SAC5C;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACtC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,kEAA8B;QACzC,OAAO,EAAE;YACP,eAAe,EAAE,sBAAsB;SACxC;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,gCAAgC;SAC5C;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACtC;CACF,CAAC;AAEW,QAAA,yBAAyB,GAAW;IAC/C;QACE,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,8EAAmC;QAC9C,OAAO,EAAE;YACP,eAAe,EAAE,sBAAsB;SACxC;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,gCAAgC;SAC5C;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAChB;CACF,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\nimport { UserRouteAccessService } from 'app/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { BacklogPractice } from 'app/shared/model/backlog-practice.model';\nimport { BacklogPracticeService } from './backlog-practice.service';\nimport { BacklogPracticeComponent } from './backlog-practice.component';\nimport { BacklogPracticeDetailComponent } from './backlog-practice-detail.component';\nimport { BacklogPracticeUpdateComponent } from './backlog-practice-update.component';\nimport { BacklogPracticeDeletePopupComponent } from './backlog-practice-delete-dialog.component';\nimport { IBacklogPractice } from 'app/shared/model/backlog-practice.model';\n\n@Injectable({ providedIn: 'root' })\nexport class BacklogPracticeResolve implements Resolve<IBacklogPractice> {\n  constructor(private service: BacklogPracticeService) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IBacklogPractice> {\n    const id = route.params['id'] ? route.params['id'] : null;\n    if (id) {\n      return this.service.find(id).pipe(\n        filter((response: HttpResponse<BacklogPractice>) => response.ok),\n        map((backlogPractice: HttpResponse<BacklogPractice>) => backlogPractice.body)\n      );\n    }\n    return of(new BacklogPractice());\n  }\n}\n\nexport const backlogPracticeRoute: Routes = [\n  {\n    path: '',\n    component: BacklogPracticeComponent,\n    data: {\n      authorities: ['ROLE_USER'],\n      pageTitle: 'App.backlogPractice.home.title'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: ':id/view',\n    component: BacklogPracticeDetailComponent,\n    resolve: {\n      backlogPractice: BacklogPracticeResolve\n    },\n    data: {\n      authorities: ['ROLE_USER'],\n      pageTitle: 'App.backlogPractice.home.title'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: 'new',\n    component: BacklogPracticeUpdateComponent,\n    resolve: {\n      backlogPractice: BacklogPracticeResolve\n    },\n    data: {\n      authorities: ['ROLE_USER'],\n      pageTitle: 'App.backlogPractice.home.title'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: ':id/edit',\n    component: BacklogPracticeUpdateComponent,\n    resolve: {\n      backlogPractice: BacklogPracticeResolve\n    },\n    data: {\n      authorities: ['ROLE_USER'],\n      pageTitle: 'App.backlogPractice.home.title'\n    },\n    canActivate: [UserRouteAccessService]\n  }\n];\n\nexport const backlogPracticePopupRoute: Routes = [\n  {\n    path: ':id/delete',\n    component: BacklogPracticeDeletePopupComponent,\n    resolve: {\n      backlogPractice: BacklogPracticeResolve\n    },\n    data: {\n      authorities: ['ROLE_USER'],\n      pageTitle: 'App.backlogPractice.home.title'\n    },\n    canActivate: [UserRouteAccessService],\n    outlet: 'popup'\n  }\n];\n"]}]}