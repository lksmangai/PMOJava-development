{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\im-employee\\im-employee-update.component.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\im-employee\\im-employee-update.component.ts","mtime":1561379265405},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b, _c, _d, _e, _f, _g, _h;\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst operators_1 = require(\"rxjs/operators\");\r\nconst moment = require(\"moment\");\r\nconst input_constants_1 = require(\"app/shared/constants/input.constants\");\r\nconst ng_jhipster_1 = require(\"ng-jhipster\");\r\nconst im_employee_model_1 = require(\"app/shared/model/im-employee.model\");\r\nconst im_employee_service_1 = require(\"./im-employee.service\");\r\nconst qnow_user_1 = require(\"app/entities/qnow-user\");\r\nconst employee_status_1 = require(\"app/entities/employee-status\");\r\nconst department_1 = require(\"app/entities/department\");\r\nconst user_contact_1 = require(\"app/entities/user-contact\");\r\nlet ImEmployeeUpdateComponent = class ImEmployeeUpdateComponent {\r\n    constructor(jhiAlertService, imEmployeeService, qnowUserService, employeeStatusService, departmentService, userContactService, activatedRoute, fb) {\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.imEmployeeService = imEmployeeService;\r\n        this.qnowUserService = qnowUserService;\r\n        this.employeeStatusService = employeeStatusService;\r\n        this.departmentService = departmentService;\r\n        this.userContactService = userContactService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.fb = fb;\r\n        this.editForm = this.fb.group({\r\n            id: [],\r\n            jobTitle: [],\r\n            jobDescription: [],\r\n            availability: [],\r\n            ssNumber: [],\r\n            salary: [],\r\n            socialSecurity: [],\r\n            insurance: [],\r\n            otherCosts: [],\r\n            currency: [],\r\n            dependantP: [],\r\n            onlyJobP: [],\r\n            marriedP: [],\r\n            headOfHouseholdP: [],\r\n            birthdate: [],\r\n            hourlyCost: [],\r\n            qnowUser: [],\r\n            employeeStatus: [],\r\n            departmentId: [],\r\n            supervisorId: [],\r\n            userContacts: []\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ imEmployee }) => {\r\n            this.updateForm(imEmployee);\r\n            this.imEmployee = imEmployee;\r\n        });\r\n        this.qnowUserService\r\n            .query({ 'imEmployeeId.specified': 'false' })\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => {\r\n            if (!this.imEmployee.qnowUser || !this.imEmployee.qnowUser.id) {\r\n                this.qnowusers = res;\r\n            }\r\n            else {\r\n                this.qnowUserService\r\n                    .find(this.imEmployee.qnowUser.id)\r\n                    .pipe(operators_1.filter((subResMayBeOk) => subResMayBeOk.ok), operators_1.map((subResponse) => subResponse.body))\r\n                    .subscribe((subRes) => (this.qnowusers = [subRes].concat(res)), (subRes) => this.onError(subRes.message));\r\n            }\r\n        }, (res) => this.onError(res.message));\r\n        this.employeeStatusService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.employeestatuses = res), (res) => this.onError(res.message));\r\n        this.departmentService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.departments = res), (res) => this.onError(res.message));\r\n        this.imEmployeeService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.imemployees = res), (res) => this.onError(res.message));\r\n        this.userContactService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.usercontacts = res), (res) => this.onError(res.message));\r\n    }\r\n    updateForm(imEmployee) {\r\n        this.editForm.patchValue({\r\n            id: imEmployee.id,\r\n            jobTitle: imEmployee.jobTitle,\r\n            jobDescription: imEmployee.jobDescription,\r\n            availability: imEmployee.availability,\r\n            ssNumber: imEmployee.ssNumber,\r\n            salary: imEmployee.salary,\r\n            socialSecurity: imEmployee.socialSecurity,\r\n            insurance: imEmployee.insurance,\r\n            otherCosts: imEmployee.otherCosts,\r\n            currency: imEmployee.currency,\r\n            dependantP: imEmployee.dependantP,\r\n            onlyJobP: imEmployee.onlyJobP,\r\n            marriedP: imEmployee.marriedP,\r\n            headOfHouseholdP: imEmployee.headOfHouseholdP,\r\n            birthdate: imEmployee.birthdate != null ? imEmployee.birthdate.format(input_constants_1.DATE_TIME_FORMAT) : null,\r\n            hourlyCost: imEmployee.hourlyCost,\r\n            qnowUser: imEmployee.qnowUser,\r\n            employeeStatus: imEmployee.employeeStatus,\r\n            departmentId: imEmployee.departmentId,\r\n            supervisorId: imEmployee.supervisorId,\r\n            userContacts: imEmployee.userContacts\r\n        });\r\n    }\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n    save() {\r\n        this.isSaving = true;\r\n        const imEmployee = this.createFromForm();\r\n        if (imEmployee.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.imEmployeeService.update(imEmployee));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.imEmployeeService.create(imEmployee));\r\n        }\r\n    }\r\n    createFromForm() {\r\n        const entity = Object.assign({}, new im_employee_model_1.ImEmployee(), { id: this.editForm.get(['id']).value, jobTitle: this.editForm.get(['jobTitle']).value, jobDescription: this.editForm.get(['jobDescription']).value, availability: this.editForm.get(['availability']).value, ssNumber: this.editForm.get(['ssNumber']).value, salary: this.editForm.get(['salary']).value, socialSecurity: this.editForm.get(['socialSecurity']).value, insurance: this.editForm.get(['insurance']).value, otherCosts: this.editForm.get(['otherCosts']).value, currency: this.editForm.get(['currency']).value, dependantP: this.editForm.get(['dependantP']).value, onlyJobP: this.editForm.get(['onlyJobP']).value, marriedP: this.editForm.get(['marriedP']).value, headOfHouseholdP: this.editForm.get(['headOfHouseholdP']).value, birthdate: this.editForm.get(['birthdate']).value != null ? moment(this.editForm.get(['birthdate']).value, input_constants_1.DATE_TIME_FORMAT) : undefined, hourlyCost: this.editForm.get(['hourlyCost']).value, qnowUser: this.editForm.get(['qnowUser']).value, employeeStatus: this.editForm.get(['employeeStatus']).value, departmentId: this.editForm.get(['departmentId']).value, supervisorId: this.editForm.get(['supervisorId']).value, userContacts: this.editForm.get(['userContacts']).value });\r\n        return entity;\r\n    }\r\n    subscribeToSaveResponse(result) {\r\n        result.subscribe((res) => this.onSaveSuccess(), (res) => this.onSaveError());\r\n    }\r\n    onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n    onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n    onError(errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n    trackQnowUserById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackEmployeeStatusById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackDepartmentById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackImEmployeeById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackUserContactById(index, item) {\r\n        return item.id;\r\n    }\r\n    getSelected(selectedVals, option) {\r\n        if (selectedVals) {\r\n            for (let i = 0; i < selectedVals.length; i++) {\r\n                if (option.id === selectedVals[i].id) {\r\n                    return selectedVals[i];\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n};\r\nImEmployeeUpdateComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-im-employee-update',\r\n        templateUrl: './im-employee-update.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof im_employee_service_1.ImEmployeeService !== \"undefined\" && im_employee_service_1.ImEmployeeService) === \"function\" ? _b : Object, typeof (_c = typeof qnow_user_1.QnowUserService !== \"undefined\" && qnow_user_1.QnowUserService) === \"function\" ? _c : Object, typeof (_d = typeof employee_status_1.EmployeeStatusService !== \"undefined\" && employee_status_1.EmployeeStatusService) === \"function\" ? _d : Object, typeof (_e = typeof department_1.DepartmentService !== \"undefined\" && department_1.DepartmentService) === \"function\" ? _e : Object, typeof (_f = typeof user_contact_1.UserContactService !== \"undefined\" && user_contact_1.UserContactService) === \"function\" ? _f : Object, typeof (_g = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _g : Object, typeof (_h = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _h : Object])\r\n], ImEmployeeUpdateComponent);\r\nexports.ImEmployeeUpdateComponent = ImEmployeeUpdateComponent;\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\im-employee\\im-employee-update.component.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\im-employee\\im-employee-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\nimport { JhiAlertService } from 'ng-jhipster';\nimport { IImEmployee, ImEmployee } from 'app/shared/model/im-employee.model';\nimport { ImEmployeeService } from './im-employee.service';\nimport { IQnowUser } from 'app/shared/model/qnow-user.model';\nimport { QnowUserService } from 'app/entities/qnow-user';\nimport { IEmployeeStatus } from 'app/shared/model/employee-status.model';\nimport { EmployeeStatusService } from 'app/entities/employee-status';\nimport { IDepartment } from 'app/shared/model/department.model';\nimport { DepartmentService } from 'app/entities/department';\nimport { IUserContact } from 'app/shared/model/user-contact.model';\nimport { UserContactService } from 'app/entities/user-contact';\n\n@Component({\n  selector: 'jhi-im-employee-update',\n  templateUrl: './im-employee-update.component.html'\n})\nexport class ImEmployeeUpdateComponent implements OnInit {\n  imEmployee: IImEmployee;\n  isSaving: boolean;\n\n  qnowusers: IQnowUser[];\n\n  employeestatuses: IEmployeeStatus[];\n\n  departments: IDepartment[];\n\n  imemployees: IImEmployee[];\n\n  usercontacts: IUserContact[];\n\n  editForm = this.fb.group({\n    id: [],\n    jobTitle: [],\n    jobDescription: [],\n    availability: [],\n    ssNumber: [],\n    salary: [],\n    socialSecurity: [],\n    insurance: [],\n    otherCosts: [],\n    currency: [],\n    dependantP: [],\n    onlyJobP: [],\n    marriedP: [],\n    headOfHouseholdP: [],\n    birthdate: [],\n    hourlyCost: [],\n    qnowUser: [],\n    employeeStatus: [],\n    departmentId: [],\n    supervisorId: [],\n    userContacts: []\n  });\n\n  constructor(\n    protected jhiAlertService: JhiAlertService,\n    protected imEmployeeService: ImEmployeeService,\n    protected qnowUserService: QnowUserService,\n    protected employeeStatusService: EmployeeStatusService,\n    protected departmentService: DepartmentService,\n    protected userContactService: UserContactService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.isSaving = false;\n    this.activatedRoute.data.subscribe(({ imEmployee }) => {\n      this.updateForm(imEmployee);\n      this.imEmployee = imEmployee;\n    });\n    this.qnowUserService\n      .query({ 'imEmployeeId.specified': 'false' })\n      .pipe(\n        filter((mayBeOk: HttpResponse<IQnowUser[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IQnowUser[]>) => response.body)\n      )\n      .subscribe(\n        (res: IQnowUser[]) => {\n          if (!this.imEmployee.qnowUser || !this.imEmployee.qnowUser.id) {\n            this.qnowusers = res;\n          } else {\n            this.qnowUserService\n              .find(this.imEmployee.qnowUser.id)\n              .pipe(\n                filter((subResMayBeOk: HttpResponse<IQnowUser>) => subResMayBeOk.ok),\n                map((subResponse: HttpResponse<IQnowUser>) => subResponse.body)\n              )\n              .subscribe(\n                (subRes: IQnowUser) => (this.qnowusers = [subRes].concat(res)),\n                (subRes: HttpErrorResponse) => this.onError(subRes.message)\n              );\n          }\n        },\n        (res: HttpErrorResponse) => this.onError(res.message)\n      );\n    this.employeeStatusService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IEmployeeStatus[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IEmployeeStatus[]>) => response.body)\n      )\n      .subscribe((res: IEmployeeStatus[]) => (this.employeestatuses = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.departmentService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IDepartment[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IDepartment[]>) => response.body)\n      )\n      .subscribe((res: IDepartment[]) => (this.departments = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.imEmployeeService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IImEmployee[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IImEmployee[]>) => response.body)\n      )\n      .subscribe((res: IImEmployee[]) => (this.imemployees = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.userContactService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IUserContact[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IUserContact[]>) => response.body)\n      )\n      .subscribe((res: IUserContact[]) => (this.usercontacts = res), (res: HttpErrorResponse) => this.onError(res.message));\n  }\n\n  updateForm(imEmployee: IImEmployee) {\n    this.editForm.patchValue({\n      id: imEmployee.id,\n      jobTitle: imEmployee.jobTitle,\n      jobDescription: imEmployee.jobDescription,\n      availability: imEmployee.availability,\n      ssNumber: imEmployee.ssNumber,\n      salary: imEmployee.salary,\n      socialSecurity: imEmployee.socialSecurity,\n      insurance: imEmployee.insurance,\n      otherCosts: imEmployee.otherCosts,\n      currency: imEmployee.currency,\n      dependantP: imEmployee.dependantP,\n      onlyJobP: imEmployee.onlyJobP,\n      marriedP: imEmployee.marriedP,\n      headOfHouseholdP: imEmployee.headOfHouseholdP,\n      birthdate: imEmployee.birthdate != null ? imEmployee.birthdate.format(DATE_TIME_FORMAT) : null,\n      hourlyCost: imEmployee.hourlyCost,\n      qnowUser: imEmployee.qnowUser,\n      employeeStatus: imEmployee.employeeStatus,\n      departmentId: imEmployee.departmentId,\n      supervisorId: imEmployee.supervisorId,\n      userContacts: imEmployee.userContacts\n    });\n  }\n\n  previousState() {\n    window.history.back();\n  }\n\n  save() {\n    this.isSaving = true;\n    const imEmployee = this.createFromForm();\n    if (imEmployee.id !== undefined) {\n      this.subscribeToSaveResponse(this.imEmployeeService.update(imEmployee));\n    } else {\n      this.subscribeToSaveResponse(this.imEmployeeService.create(imEmployee));\n    }\n  }\n\n  private createFromForm(): IImEmployee {\n    const entity = {\n      ...new ImEmployee(),\n      id: this.editForm.get(['id']).value,\n      jobTitle: this.editForm.get(['jobTitle']).value,\n      jobDescription: this.editForm.get(['jobDescription']).value,\n      availability: this.editForm.get(['availability']).value,\n      ssNumber: this.editForm.get(['ssNumber']).value,\n      salary: this.editForm.get(['salary']).value,\n      socialSecurity: this.editForm.get(['socialSecurity']).value,\n      insurance: this.editForm.get(['insurance']).value,\n      otherCosts: this.editForm.get(['otherCosts']).value,\n      currency: this.editForm.get(['currency']).value,\n      dependantP: this.editForm.get(['dependantP']).value,\n      onlyJobP: this.editForm.get(['onlyJobP']).value,\n      marriedP: this.editForm.get(['marriedP']).value,\n      headOfHouseholdP: this.editForm.get(['headOfHouseholdP']).value,\n      birthdate:\n        this.editForm.get(['birthdate']).value != null ? moment(this.editForm.get(['birthdate']).value, DATE_TIME_FORMAT) : undefined,\n      hourlyCost: this.editForm.get(['hourlyCost']).value,\n      qnowUser: this.editForm.get(['qnowUser']).value,\n      employeeStatus: this.editForm.get(['employeeStatus']).value,\n      departmentId: this.editForm.get(['departmentId']).value,\n      supervisorId: this.editForm.get(['supervisorId']).value,\n      userContacts: this.editForm.get(['userContacts']).value\n    };\n    return entity;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IImEmployee>>) {\n    result.subscribe((res: HttpResponse<IImEmployee>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n  }\n\n  protected onSaveSuccess() {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError() {\n    this.isSaving = false;\n  }\n  protected onError(errorMessage: string) {\n    this.jhiAlertService.error(errorMessage, null, null);\n  }\n\n  trackQnowUserById(index: number, item: IQnowUser) {\n    return item.id;\n  }\n\n  trackEmployeeStatusById(index: number, item: IEmployeeStatus) {\n    return item.id;\n  }\n\n  trackDepartmentById(index: number, item: IDepartment) {\n    return item.id;\n  }\n\n  trackImEmployeeById(index: number, item: IImEmployee) {\n    return item.id;\n  }\n\n  trackUserContactById(index: number, item: IUserContact) {\n    return item.id;\n  }\n\n  getSelected(selectedVals: Array<any>, option: any) {\n    if (selectedVals) {\n      for (let i = 0; i < selectedVals.length; i++) {\n        if (option.id === selectedVals[i].id) {\n          return selectedVals[i];\n        }\n      }\n    }\n    return option;\n  }\n}\n"]}]}