{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\group-members\\group-members-update.component.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\group-members\\group-members-update.component.ts","mtime":1561379292042},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b, _c, _d, _e, _f;\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst operators_1 = require(\"rxjs/operators\");\r\nconst ng_jhipster_1 = require(\"ng-jhipster\");\r\nconst group_members_model_1 = require(\"app/shared/model/group-members.model\");\r\nconst group_members_service_1 = require(\"./group-members.service\");\r\nconst roles_1 = require(\"app/entities/roles\");\r\nconst user_contact_1 = require(\"app/entities/user-contact\");\r\nlet GroupMembersUpdateComponent = class GroupMembersUpdateComponent {\r\n    constructor(jhiAlertService, groupMembersService, rolesService, userContactService, activatedRoute, fb) {\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.groupMembersService = groupMembersService;\r\n        this.rolesService = rolesService;\r\n        this.userContactService = userContactService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.fb = fb;\r\n        this.editForm = this.fb.group({\r\n            id: [],\r\n            code: [],\r\n            name: [],\r\n            description: [],\r\n            roles: []\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ groupMembers }) => {\r\n            this.updateForm(groupMembers);\r\n            this.groupMembers = groupMembers;\r\n        });\r\n        this.rolesService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.roles = res), (res) => this.onError(res.message));\r\n        this.userContactService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.usercontacts = res), (res) => this.onError(res.message));\r\n    }\r\n    updateForm(groupMembers) {\r\n        this.editForm.patchValue({\r\n            id: groupMembers.id,\r\n            code: groupMembers.code,\r\n            name: groupMembers.name,\r\n            description: groupMembers.description,\r\n            roles: groupMembers.roles\r\n        });\r\n    }\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n    save() {\r\n        this.isSaving = true;\r\n        const groupMembers = this.createFromForm();\r\n        if (groupMembers.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.groupMembersService.update(groupMembers));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.groupMembersService.create(groupMembers));\r\n        }\r\n    }\r\n    createFromForm() {\r\n        const entity = Object.assign({}, new group_members_model_1.GroupMembers(), { id: this.editForm.get(['id']).value, code: this.editForm.get(['code']).value, name: this.editForm.get(['name']).value, description: this.editForm.get(['description']).value, roles: this.editForm.get(['roles']).value });\r\n        return entity;\r\n    }\r\n    subscribeToSaveResponse(result) {\r\n        result.subscribe((res) => this.onSaveSuccess(), (res) => this.onSaveError());\r\n    }\r\n    onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n    onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n    onError(errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n    trackRolesById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackUserContactById(index, item) {\r\n        return item.id;\r\n    }\r\n    getSelected(selectedVals, option) {\r\n        if (selectedVals) {\r\n            for (let i = 0; i < selectedVals.length; i++) {\r\n                if (option.id === selectedVals[i].id) {\r\n                    return selectedVals[i];\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n};\r\nGroupMembersUpdateComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-group-members-update',\r\n        templateUrl: './group-members-update.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof group_members_service_1.GroupMembersService !== \"undefined\" && group_members_service_1.GroupMembersService) === \"function\" ? _b : Object, typeof (_c = typeof roles_1.RolesService !== \"undefined\" && roles_1.RolesService) === \"function\" ? _c : Object, typeof (_d = typeof user_contact_1.UserContactService !== \"undefined\" && user_contact_1.UserContactService) === \"function\" ? _d : Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _e : Object, typeof (_f = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _f : Object])\r\n], GroupMembersUpdateComponent);\r\nexports.GroupMembersUpdateComponent = GroupMembersUpdateComponent;\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\group-members\\group-members-update.component.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\group-members\\group-members-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JhiAlertService } from 'ng-jhipster';\nimport { IGroupMembers, GroupMembers } from 'app/shared/model/group-members.model';\nimport { GroupMembersService } from './group-members.service';\nimport { IRoles } from 'app/shared/model/roles.model';\nimport { RolesService } from 'app/entities/roles';\nimport { IUserContact } from 'app/shared/model/user-contact.model';\nimport { UserContactService } from 'app/entities/user-contact';\n\n@Component({\n  selector: 'jhi-group-members-update',\n  templateUrl: './group-members-update.component.html'\n})\nexport class GroupMembersUpdateComponent implements OnInit {\n  groupMembers: IGroupMembers;\n  isSaving: boolean;\n\n  roles: IRoles[];\n\n  usercontacts: IUserContact[];\n\n  editForm = this.fb.group({\n    id: [],\n    code: [],\n    name: [],\n    description: [],\n    roles: []\n  });\n\n  constructor(\n    protected jhiAlertService: JhiAlertService,\n    protected groupMembersService: GroupMembersService,\n    protected rolesService: RolesService,\n    protected userContactService: UserContactService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.isSaving = false;\n    this.activatedRoute.data.subscribe(({ groupMembers }) => {\n      this.updateForm(groupMembers);\n      this.groupMembers = groupMembers;\n    });\n    this.rolesService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IRoles[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IRoles[]>) => response.body)\n      )\n      .subscribe((res: IRoles[]) => (this.roles = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.userContactService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IUserContact[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IUserContact[]>) => response.body)\n      )\n      .subscribe((res: IUserContact[]) => (this.usercontacts = res), (res: HttpErrorResponse) => this.onError(res.message));\n  }\n\n  updateForm(groupMembers: IGroupMembers) {\n    this.editForm.patchValue({\n      id: groupMembers.id,\n      code: groupMembers.code,\n      name: groupMembers.name,\n      description: groupMembers.description,\n      roles: groupMembers.roles\n    });\n  }\n\n  previousState() {\n    window.history.back();\n  }\n\n  save() {\n    this.isSaving = true;\n    const groupMembers = this.createFromForm();\n    if (groupMembers.id !== undefined) {\n      this.subscribeToSaveResponse(this.groupMembersService.update(groupMembers));\n    } else {\n      this.subscribeToSaveResponse(this.groupMembersService.create(groupMembers));\n    }\n  }\n\n  private createFromForm(): IGroupMembers {\n    const entity = {\n      ...new GroupMembers(),\n      id: this.editForm.get(['id']).value,\n      code: this.editForm.get(['code']).value,\n      name: this.editForm.get(['name']).value,\n      description: this.editForm.get(['description']).value,\n      roles: this.editForm.get(['roles']).value\n    };\n    return entity;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IGroupMembers>>) {\n    result.subscribe((res: HttpResponse<IGroupMembers>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n  }\n\n  protected onSaveSuccess() {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError() {\n    this.isSaving = false;\n  }\n  protected onError(errorMessage: string) {\n    this.jhiAlertService.error(errorMessage, null, null);\n  }\n\n  trackRolesById(index: number, item: IRoles) {\n    return item.id;\n  }\n\n  trackUserContactById(index: number, item: IUserContact) {\n    return item.id;\n  }\n\n  getSelected(selectedVals: Array<any>, option: any) {\n    if (selectedVals) {\n      for (let i = 0; i < selectedVals.length; i++) {\n        if (option.id === selectedVals[i].id) {\n          return selectedVals[i];\n        }\n      }\n    }\n    return option;\n  }\n}\n"]}]}