{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\file-storage\\file-storage-update.component.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\file-storage\\file-storage-update.component.ts","mtime":1561379318216},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b, _c, _d, _e, _f;\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst operators_1 = require(\"rxjs/operators\");\r\nconst ng_jhipster_1 = require(\"ng-jhipster\");\r\nconst file_storage_model_1 = require(\"app/shared/model/file-storage.model\");\r\nconst file_storage_service_1 = require(\"./file-storage.service\");\r\nconst user_contact_1 = require(\"app/entities/user-contact\");\r\nconst im_projects_1 = require(\"app/entities/im-projects\");\r\nlet FileStorageUpdateComponent = class FileStorageUpdateComponent {\r\n    constructor(jhiAlertService, fileStorageService, userContactService, imProjectsService, activatedRoute, fb) {\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.fileStorageService = fileStorageService;\r\n        this.userContactService = userContactService;\r\n        this.imProjectsService = imProjectsService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.fb = fb;\r\n        this.editForm = this.fb.group({\r\n            id: [],\r\n            filename: [],\r\n            caption: [],\r\n            userContact: [],\r\n            imProjects: []\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ fileStorage }) => {\r\n            this.updateForm(fileStorage);\r\n            this.fileStorage = fileStorage;\r\n        });\r\n        this.userContactService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.usercontacts = res), (res) => this.onError(res.message));\r\n        this.imProjectsService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.improjects = res), (res) => this.onError(res.message));\r\n    }\r\n    updateForm(fileStorage) {\r\n        this.editForm.patchValue({\r\n            id: fileStorage.id,\r\n            filename: fileStorage.filename,\r\n            caption: fileStorage.caption,\r\n            userContact: fileStorage.userContact,\r\n            imProjects: fileStorage.imProjects\r\n        });\r\n    }\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n    save() {\r\n        this.isSaving = true;\r\n        const fileStorage = this.createFromForm();\r\n        if (fileStorage.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.fileStorageService.update(fileStorage));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.fileStorageService.create(fileStorage));\r\n        }\r\n    }\r\n    createFromForm() {\r\n        const entity = Object.assign({}, new file_storage_model_1.FileStorage(), { id: this.editForm.get(['id']).value, filename: this.editForm.get(['filename']).value, caption: this.editForm.get(['caption']).value, userContact: this.editForm.get(['userContact']).value, imProjects: this.editForm.get(['imProjects']).value });\r\n        return entity;\r\n    }\r\n    subscribeToSaveResponse(result) {\r\n        result.subscribe((res) => this.onSaveSuccess(), (res) => this.onSaveError());\r\n    }\r\n    onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n    onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n    onError(errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n    trackUserContactById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackImProjectsById(index, item) {\r\n        return item.id;\r\n    }\r\n};\r\nFileStorageUpdateComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-file-storage-update',\r\n        templateUrl: './file-storage-update.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof file_storage_service_1.FileStorageService !== \"undefined\" && file_storage_service_1.FileStorageService) === \"function\" ? _b : Object, typeof (_c = typeof user_contact_1.UserContactService !== \"undefined\" && user_contact_1.UserContactService) === \"function\" ? _c : Object, typeof (_d = typeof im_projects_1.ImProjectsService !== \"undefined\" && im_projects_1.ImProjectsService) === \"function\" ? _d : Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _e : Object, typeof (_f = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _f : Object])\r\n], FileStorageUpdateComponent);\r\nexports.FileStorageUpdateComponent = FileStorageUpdateComponent;\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\file-storage\\file-storage-update.component.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\file-storage\\file-storage-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JhiAlertService } from 'ng-jhipster';\nimport { IFileStorage, FileStorage } from 'app/shared/model/file-storage.model';\nimport { FileStorageService } from './file-storage.service';\nimport { IUserContact } from 'app/shared/model/user-contact.model';\nimport { UserContactService } from 'app/entities/user-contact';\nimport { IImProjects } from 'app/shared/model/im-projects.model';\nimport { ImProjectsService } from 'app/entities/im-projects';\n\n@Component({\n  selector: 'jhi-file-storage-update',\n  templateUrl: './file-storage-update.component.html'\n})\nexport class FileStorageUpdateComponent implements OnInit {\n  fileStorage: IFileStorage;\n  isSaving: boolean;\n\n  usercontacts: IUserContact[];\n\n  improjects: IImProjects[];\n\n  editForm = this.fb.group({\n    id: [],\n    filename: [],\n    caption: [],\n    userContact: [],\n    imProjects: []\n  });\n\n  constructor(\n    protected jhiAlertService: JhiAlertService,\n    protected fileStorageService: FileStorageService,\n    protected userContactService: UserContactService,\n    protected imProjectsService: ImProjectsService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.isSaving = false;\n    this.activatedRoute.data.subscribe(({ fileStorage }) => {\n      this.updateForm(fileStorage);\n      this.fileStorage = fileStorage;\n    });\n    this.userContactService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IUserContact[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IUserContact[]>) => response.body)\n      )\n      .subscribe((res: IUserContact[]) => (this.usercontacts = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.imProjectsService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IImProjects[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IImProjects[]>) => response.body)\n      )\n      .subscribe((res: IImProjects[]) => (this.improjects = res), (res: HttpErrorResponse) => this.onError(res.message));\n  }\n\n  updateForm(fileStorage: IFileStorage) {\n    this.editForm.patchValue({\n      id: fileStorage.id,\n      filename: fileStorage.filename,\n      caption: fileStorage.caption,\n      userContact: fileStorage.userContact,\n      imProjects: fileStorage.imProjects\n    });\n  }\n\n  previousState() {\n    window.history.back();\n  }\n\n  save() {\n    this.isSaving = true;\n    const fileStorage = this.createFromForm();\n    if (fileStorage.id !== undefined) {\n      this.subscribeToSaveResponse(this.fileStorageService.update(fileStorage));\n    } else {\n      this.subscribeToSaveResponse(this.fileStorageService.create(fileStorage));\n    }\n  }\n\n  private createFromForm(): IFileStorage {\n    const entity = {\n      ...new FileStorage(),\n      id: this.editForm.get(['id']).value,\n      filename: this.editForm.get(['filename']).value,\n      caption: this.editForm.get(['caption']).value,\n      userContact: this.editForm.get(['userContact']).value,\n      imProjects: this.editForm.get(['imProjects']).value\n    };\n    return entity;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IFileStorage>>) {\n    result.subscribe((res: HttpResponse<IFileStorage>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n  }\n\n  protected onSaveSuccess() {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError() {\n    this.isSaving = false;\n  }\n  protected onError(errorMessage: string) {\n    this.jhiAlertService.error(errorMessage, null, null);\n  }\n\n  trackUserContactById(index: number, item: IUserContact) {\n    return item.id;\n  }\n\n  trackImProjectsById(index: number, item: IImProjects) {\n    return item.id;\n  }\n}\n"]}]}