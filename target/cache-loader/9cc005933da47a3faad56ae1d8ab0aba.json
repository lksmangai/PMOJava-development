{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\qnow-user\\qnow-user-update.component.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\qnow-user\\qnow-user-update.component.ts","mtime":1561379253686},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b, _c, _d, _e;\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst operators_1 = require(\"rxjs/operators\");\r\nconst ng_jhipster_1 = require(\"ng-jhipster\");\r\nconst qnow_user_model_1 = require(\"app/shared/model/qnow-user.model\");\r\nconst qnow_user_service_1 = require(\"./qnow-user.service\");\r\nconst core_2 = require(\"app/core\");\r\nlet QnowUserUpdateComponent = class QnowUserUpdateComponent {\r\n    constructor(jhiAlertService, qnowUserService, userService, activatedRoute, fb) {\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.qnowUserService = qnowUserService;\r\n        this.userService = userService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.fb = fb;\r\n        this.editForm = this.fb.group({\r\n            id: [],\r\n            user: []\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ qnowUser }) => {\r\n            this.updateForm(qnowUser);\r\n            this.qnowUser = qnowUser;\r\n        });\r\n        this.userService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.users = res), (res) => this.onError(res.message));\r\n    }\r\n    updateForm(qnowUser) {\r\n        this.editForm.patchValue({\r\n            id: qnowUser.id,\r\n            user: qnowUser.user\r\n        });\r\n    }\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n    save() {\r\n        this.isSaving = true;\r\n        const qnowUser = this.createFromForm();\r\n        if (qnowUser.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.qnowUserService.update(qnowUser));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.qnowUserService.create(qnowUser));\r\n        }\r\n    }\r\n    createFromForm() {\r\n        const entity = Object.assign({}, new qnow_user_model_1.QnowUser(), { id: this.editForm.get(['id']).value, user: this.editForm.get(['user']).value });\r\n        return entity;\r\n    }\r\n    subscribeToSaveResponse(result) {\r\n        result.subscribe((res) => this.onSaveSuccess(), (res) => this.onSaveError());\r\n    }\r\n    onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n    onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n    onError(errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n    trackUserById(index, item) {\r\n        return item.id;\r\n    }\r\n};\r\nQnowUserUpdateComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-qnow-user-update',\r\n        templateUrl: './qnow-user-update.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof qnow_user_service_1.QnowUserService !== \"undefined\" && qnow_user_service_1.QnowUserService) === \"function\" ? _b : Object, typeof (_c = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" ? _c : Object, typeof (_d = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _d : Object, typeof (_e = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _e : Object])\r\n], QnowUserUpdateComponent);\r\nexports.QnowUserUpdateComponent = QnowUserUpdateComponent;\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\qnow-user\\qnow-user-update.component.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\qnow-user\\qnow-user-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JhiAlertService } from 'ng-jhipster';\nimport { IQnowUser, QnowUser } from 'app/shared/model/qnow-user.model';\nimport { QnowUserService } from './qnow-user.service';\nimport { IUser, UserService } from 'app/core';\n\n@Component({\n  selector: 'jhi-qnow-user-update',\n  templateUrl: './qnow-user-update.component.html'\n})\nexport class QnowUserUpdateComponent implements OnInit {\n  qnowUser: IQnowUser;\n  isSaving: boolean;\n\n  users: IUser[];\n\n  editForm = this.fb.group({\n    id: [],\n    user: []\n  });\n\n  constructor(\n    protected jhiAlertService: JhiAlertService,\n    protected qnowUserService: QnowUserService,\n    protected userService: UserService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.isSaving = false;\n    this.activatedRoute.data.subscribe(({ qnowUser }) => {\n      this.updateForm(qnowUser);\n      this.qnowUser = qnowUser;\n    });\n    this.userService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IUser[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IUser[]>) => response.body)\n      )\n      .subscribe((res: IUser[]) => (this.users = res), (res: HttpErrorResponse) => this.onError(res.message));\n  }\n\n  updateForm(qnowUser: IQnowUser) {\n    this.editForm.patchValue({\n      id: qnowUser.id,\n      user: qnowUser.user\n    });\n  }\n\n  previousState() {\n    window.history.back();\n  }\n\n  save() {\n    this.isSaving = true;\n    const qnowUser = this.createFromForm();\n    if (qnowUser.id !== undefined) {\n      this.subscribeToSaveResponse(this.qnowUserService.update(qnowUser));\n    } else {\n      this.subscribeToSaveResponse(this.qnowUserService.create(qnowUser));\n    }\n  }\n\n  private createFromForm(): IQnowUser {\n    const entity = {\n      ...new QnowUser(),\n      id: this.editForm.get(['id']).value,\n      user: this.editForm.get(['user']).value\n    };\n    return entity;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IQnowUser>>) {\n    result.subscribe((res: HttpResponse<IQnowUser>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n  }\n\n  protected onSaveSuccess() {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError() {\n    this.isSaving = false;\n  }\n  protected onError(errorMessage: string) {\n    this.jhiAlertService.error(errorMessage, null, null);\n  }\n\n  trackUserById(index: number, item: IUser) {\n    return item.id;\n  }\n}\n"]}]}