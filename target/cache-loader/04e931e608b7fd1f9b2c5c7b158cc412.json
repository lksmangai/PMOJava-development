{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\department\\department-update.component.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\department\\department-update.component.ts","mtime":1561379267152},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b, _c;\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst department_model_1 = require(\"app/shared/model/department.model\");\r\nconst department_service_1 = require(\"./department.service\");\r\nlet DepartmentUpdateComponent = class DepartmentUpdateComponent {\r\n    constructor(departmentService, activatedRoute, fb) {\r\n        this.departmentService = departmentService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.fb = fb;\r\n        this.editForm = this.fb.group({\r\n            id: [],\r\n            departmentCode: [],\r\n            departmentName: []\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ department }) => {\r\n            this.updateForm(department);\r\n            this.department = department;\r\n        });\r\n    }\r\n    updateForm(department) {\r\n        this.editForm.patchValue({\r\n            id: department.id,\r\n            departmentCode: department.departmentCode,\r\n            departmentName: department.departmentName\r\n        });\r\n    }\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n    save() {\r\n        this.isSaving = true;\r\n        const department = this.createFromForm();\r\n        if (department.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.departmentService.update(department));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.departmentService.create(department));\r\n        }\r\n    }\r\n    createFromForm() {\r\n        const entity = Object.assign({}, new department_model_1.Department(), { id: this.editForm.get(['id']).value, departmentCode: this.editForm.get(['departmentCode']).value, departmentName: this.editForm.get(['departmentName']).value });\r\n        return entity;\r\n    }\r\n    subscribeToSaveResponse(result) {\r\n        result.subscribe((res) => this.onSaveSuccess(), (res) => this.onSaveError());\r\n    }\r\n    onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n    onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n};\r\nDepartmentUpdateComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-department-update',\r\n        templateUrl: './department-update.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof department_service_1.DepartmentService !== \"undefined\" && department_service_1.DepartmentService) === \"function\" ? _a : Object, typeof (_b = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _b : Object, typeof (_c = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _c : Object])\r\n], DepartmentUpdateComponent);\r\nexports.DepartmentUpdateComponent = DepartmentUpdateComponent;\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\department\\department-update.component.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\department\\department-update.component.ts"],"names":[],"mappings":";;;;AAAA,wCAAkD;AAElD,0CAAyD;AACzD,4CAAiD;AAEjD,wEAA4E;AAC5E,6DAAyD;AAMzD,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IAUpC,YAAsB,iBAAoC,EAAY,cAA8B,EAAU,EAAe;QAAvG,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAY,mBAAc,GAAd,cAAc,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAN7H,aAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvB,EAAE,EAAE,EAAE;YACN,cAAc,EAAE,EAAE;YAClB,cAAc,EAAE,EAAE;SACnB,CAAC,CAAC;IAE6H,CAAC;IAEjI,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE;YACpD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,UAAuB;QAChC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YACvB,EAAE,EAAE,UAAU,CAAC,EAAE;YACjB,cAAc,EAAE,UAAU,CAAC,cAAc;YACzC,cAAc,EAAE,UAAU,CAAC,cAAc;SAC1C,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACzC,IAAI,UAAU,CAAC,EAAE,KAAK,SAAS,EAAE;YAC/B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;SACzE;aAAM;YACL,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;SACzE;IACH,CAAC;IAEO,cAAc;QACpB,MAAM,MAAM,qBACP,IAAI,6BAAU,EAAE,IACnB,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EACnC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,EAC3D,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,GAC5D,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC;IAES,uBAAuB,CAAC,MAA6C;QAC7E,MAAM,CAAC,SAAS,CAAC,CAAC,GAA8B,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,GAAsB,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAC7H,CAAC;IAES,aAAa;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAES,WAAW;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;CACF,CAAA;AAhEY,yBAAyB;IAJrC,gBAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,WAAW,EAAE,oCAAoC;KAClD,CAAC;iEAWyC,sCAAiB,oBAAjB,sCAAiB,oDAA4B,uBAAc,oBAAd,uBAAc,oDAAc,mBAAW,oBAAX,mBAAW;GAVlH,yBAAyB,CAgErC;AAhEY,8DAAyB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { IDepartment, Department } from 'app/shared/model/department.model';\nimport { DepartmentService } from './department.service';\n\n@Component({\n  selector: 'jhi-department-update',\n  templateUrl: './department-update.component.html'\n})\nexport class DepartmentUpdateComponent implements OnInit {\n  department: IDepartment;\n  isSaving: boolean;\n\n  editForm = this.fb.group({\n    id: [],\n    departmentCode: [],\n    departmentName: []\n  });\n\n  constructor(protected departmentService: DepartmentService, protected activatedRoute: ActivatedRoute, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.isSaving = false;\n    this.activatedRoute.data.subscribe(({ department }) => {\n      this.updateForm(department);\n      this.department = department;\n    });\n  }\n\n  updateForm(department: IDepartment) {\n    this.editForm.patchValue({\n      id: department.id,\n      departmentCode: department.departmentCode,\n      departmentName: department.departmentName\n    });\n  }\n\n  previousState() {\n    window.history.back();\n  }\n\n  save() {\n    this.isSaving = true;\n    const department = this.createFromForm();\n    if (department.id !== undefined) {\n      this.subscribeToSaveResponse(this.departmentService.update(department));\n    } else {\n      this.subscribeToSaveResponse(this.departmentService.create(department));\n    }\n  }\n\n  private createFromForm(): IDepartment {\n    const entity = {\n      ...new Department(),\n      id: this.editForm.get(['id']).value,\n      departmentCode: this.editForm.get(['departmentCode']).value,\n      departmentName: this.editForm.get(['departmentName']).value\n    };\n    return entity;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IDepartment>>) {\n    result.subscribe((res: HttpResponse<IDepartment>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n  }\n\n  protected onSaveSuccess() {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError() {\n    this.isSaving = false;\n  }\n}\n"]}]}