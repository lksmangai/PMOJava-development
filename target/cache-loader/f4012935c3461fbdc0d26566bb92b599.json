{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\blocks\\interceptor\\notification.interceptor.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\blocks\\interceptor\\notification.interceptor.ts","mtime":1561374552861},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a;\r\nconst ng_jhipster_1 = require(\"ng-jhipster\");\r\nconst http_1 = require(\"@angular/common/http\");\r\nconst core_1 = require(\"@angular/core\");\r\nconst operators_1 = require(\"rxjs/operators\");\r\nlet NotificationInterceptor = class NotificationInterceptor {\r\n    constructor(alertService) {\r\n        this.alertService = alertService;\r\n    }\r\n    intercept(request, next) {\r\n        return next.handle(request).pipe(operators_1.tap((event) => {\r\n            if (event instanceof http_1.HttpResponse) {\r\n                const arr = event.headers.keys();\r\n                let alert = null;\r\n                let alertParams = null;\r\n                arr.forEach(entry => {\r\n                    if (entry.toLowerCase().endsWith('app-alert')) {\r\n                        alert = event.headers.get(entry);\r\n                    }\r\n                    else if (entry.toLowerCase().endsWith('app-params')) {\r\n                        alertParams = event.headers.get(entry);\r\n                    }\r\n                });\r\n                if (alert) {\r\n                    if (typeof alert === 'string') {\r\n                        this.alertService.success(alert, { param: alertParams }, null);\r\n                    }\r\n                }\r\n            }\r\n        }, (err) => { }));\r\n    }\r\n};\r\nNotificationInterceptor = tslib_1.__decorate([\r\n    core_1.Injectable(),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object])\r\n], NotificationInterceptor);\r\nexports.NotificationInterceptor = NotificationInterceptor;\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\blocks\\interceptor\\notification.interceptor.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\blocks\\interceptor\\notification.interceptor.ts"],"names":[],"mappings":";;;;AAAA,6CAA8C;AAC9C,+CAA0G;AAC1G,wCAA2C;AAE3C,8CAAqC;AAGrC,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAClC,YAAoB,YAA6B;QAA7B,iBAAY,GAAZ,YAAY,CAAiB;IAAG,CAAC;IAErD,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,eAAG,CACD,CAAC,KAAqB,EAAE,EAAE;YACxB,IAAI,KAAK,YAAY,mBAAY,EAAE;gBACjC,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACjC,IAAI,KAAK,GAAG,IAAI,CAAC;gBACjB,IAAI,WAAW,GAAG,IAAI,CAAC;gBACvB,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBAClB,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;wBAC7C,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBAClC;yBAAM,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;wBACrD,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACxC;gBACH,CAAC,CAAC,CAAC;gBACH,IAAI,KAAK,EAAE;oBACT,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;wBAC7B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;qBAChE;iBACF;aACF;QACH,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,GAAE,CAAC,CACjB,CACF,CAAC;IACJ,CAAC;CACF,CAAA;AA7BY,uBAAuB;IADnC,iBAAU,EAAE;iEAEuB,6BAAe,oBAAf,6BAAe;GADtC,uBAAuB,CA6BnC;AA7BY,0DAAuB","sourcesContent":["import { JhiAlertService } from 'ng-jhipster';\nimport { HttpInterceptor, HttpRequest, HttpResponse, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class NotificationInterceptor implements HttpInterceptor {\n  constructor(private alertService: JhiAlertService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap(\n        (event: HttpEvent<any>) => {\n          if (event instanceof HttpResponse) {\n            const arr = event.headers.keys();\n            let alert = null;\n            let alertParams = null;\n            arr.forEach(entry => {\n              if (entry.toLowerCase().endsWith('app-alert')) {\n                alert = event.headers.get(entry);\n              } else if (entry.toLowerCase().endsWith('app-params')) {\n                alertParams = event.headers.get(entry);\n              }\n            });\n            if (alert) {\n              if (typeof alert === 'string') {\n                this.alertService.success(alert, { param: alertParams }, null);\n              }\n            }\n          }\n        },\n        (err: any) => {}\n      )\n    );\n  }\n}\n"]}]}