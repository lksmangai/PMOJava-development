{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\tag-type\\tag-type.route.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\tag-type\\tag-type.route.ts","mtime":1561379319717},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a;\r\nconst core_1 = require(\"@angular/core\");\r\nconst core_2 = require(\"app/core\");\r\nconst rxjs_1 = require(\"rxjs\");\r\nconst operators_1 = require(\"rxjs/operators\");\r\nconst tag_type_model_1 = require(\"app/shared/model/tag-type.model\");\r\nconst tag_type_service_1 = require(\"./tag-type.service\");\r\nconst tag_type_component_1 = require(\"./tag-type.component\");\r\nconst tag_type_detail_component_1 = require(\"./tag-type-detail.component\");\r\nconst tag_type_update_component_1 = require(\"./tag-type-update.component\");\r\nconst tag_type_delete_dialog_component_1 = require(\"./tag-type-delete-dialog.component\");\r\nlet TagTypeResolve = class TagTypeResolve {\r\n    constructor(service) {\r\n        this.service = service;\r\n    }\r\n    resolve(route, state) {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(operators_1.filter((response) => response.ok), operators_1.map((tagType) => tagType.body));\r\n        }\r\n        return rxjs_1.of(new tag_type_model_1.TagType());\r\n    }\r\n};\r\nTagTypeResolve = tslib_1.__decorate([\r\n    core_1.Injectable({ providedIn: 'root' }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof tag_type_service_1.TagTypeService !== \"undefined\" && tag_type_service_1.TagTypeService) === \"function\" ? _a : Object])\r\n], TagTypeResolve);\r\nexports.TagTypeResolve = TagTypeResolve;\r\nexports.tagTypeRoute = [\r\n    {\r\n        path: '',\r\n        component: tag_type_component_1.TagTypeComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'App.tagType.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: tag_type_detail_component_1.TagTypeDetailComponent,\r\n        resolve: {\r\n            tagType: TagTypeResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'App.tagType.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: tag_type_update_component_1.TagTypeUpdateComponent,\r\n        resolve: {\r\n            tagType: TagTypeResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'App.tagType.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: tag_type_update_component_1.TagTypeUpdateComponent,\r\n        resolve: {\r\n            tagType: TagTypeResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'App.tagType.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    }\r\n];\r\nexports.tagTypePopupRoute = [\r\n    {\r\n        path: ':id/delete',\r\n        component: tag_type_delete_dialog_component_1.TagTypeDeletePopupComponent,\r\n        resolve: {\r\n            tagType: TagTypeResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'App.tagType.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\tag-type\\tag-type.route.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\tag-type\\tag-type.route.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAG3C,mCAAkD;AAClD,+BAAsC;AACtC,8CAA6C;AAC7C,oEAA0D;AAC1D,yDAAoD;AACpD,6DAAwD;AACxD,2EAAqE;AACrE,2EAAqE;AACrE,yFAAiF;AAIjF,IAAa,cAAc,GAA3B,MAAa,cAAc;IACzB,YAAoB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;IAAG,CAAC;IAE/C,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC/D,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,IAAI,EAAE,EAAE;YACN,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAC/B,kBAAM,CAAC,CAAC,QAA+B,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EACxD,eAAG,CAAC,CAAC,OAA8B,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CACtD,CAAC;SACH;QACD,OAAO,SAAE,CAAC,IAAI,wBAAO,EAAE,CAAC,CAAC;IAC3B,CAAC;CACF,CAAA;AAbY,cAAc;IAD1B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAEJ,iCAAc,oBAAd,iCAAc;GADhC,cAAc,CAa1B;AAbY,wCAAc;AAed,QAAA,YAAY,GAAW;IAClC;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qCAAgB;QAC3B,IAAI,EAAE;YACJ,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wBAAwB;SACpC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACtC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,kDAAsB;QACjC,OAAO,EAAE;YACP,OAAO,EAAE,cAAc;SACxB;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wBAAwB;SACpC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACtC;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,kDAAsB;QACjC,OAAO,EAAE;YACP,OAAO,EAAE,cAAc;SACxB;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wBAAwB;SACpC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACtC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,kDAAsB;QACjC,OAAO,EAAE;YACP,OAAO,EAAE,cAAc;SACxB;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wBAAwB;SACpC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACtC;CACF,CAAC;AAEW,QAAA,iBAAiB,GAAW;IACvC;QACE,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,8DAA2B;QACtC,OAAO,EAAE;YACP,OAAO,EAAE,cAAc;SACxB;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wBAAwB;SACpC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAChB;CACF,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\nimport { UserRouteAccessService } from 'app/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { TagType } from 'app/shared/model/tag-type.model';\nimport { TagTypeService } from './tag-type.service';\nimport { TagTypeComponent } from './tag-type.component';\nimport { TagTypeDetailComponent } from './tag-type-detail.component';\nimport { TagTypeUpdateComponent } from './tag-type-update.component';\nimport { TagTypeDeletePopupComponent } from './tag-type-delete-dialog.component';\nimport { ITagType } from 'app/shared/model/tag-type.model';\n\n@Injectable({ providedIn: 'root' })\nexport class TagTypeResolve implements Resolve<ITagType> {\n  constructor(private service: TagTypeService) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ITagType> {\n    const id = route.params['id'] ? route.params['id'] : null;\n    if (id) {\n      return this.service.find(id).pipe(\n        filter((response: HttpResponse<TagType>) => response.ok),\n        map((tagType: HttpResponse<TagType>) => tagType.body)\n      );\n    }\n    return of(new TagType());\n  }\n}\n\nexport const tagTypeRoute: Routes = [\n  {\n    path: '',\n    component: TagTypeComponent,\n    data: {\n      authorities: ['ROLE_USER'],\n      pageTitle: 'App.tagType.home.title'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: ':id/view',\n    component: TagTypeDetailComponent,\n    resolve: {\n      tagType: TagTypeResolve\n    },\n    data: {\n      authorities: ['ROLE_USER'],\n      pageTitle: 'App.tagType.home.title'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: 'new',\n    component: TagTypeUpdateComponent,\n    resolve: {\n      tagType: TagTypeResolve\n    },\n    data: {\n      authorities: ['ROLE_USER'],\n      pageTitle: 'App.tagType.home.title'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: ':id/edit',\n    component: TagTypeUpdateComponent,\n    resolve: {\n      tagType: TagTypeResolve\n    },\n    data: {\n      authorities: ['ROLE_USER'],\n      pageTitle: 'App.tagType.home.title'\n    },\n    canActivate: [UserRouteAccessService]\n  }\n];\n\nexport const tagTypePopupRoute: Routes = [\n  {\n    path: ':id/delete',\n    component: TagTypeDeletePopupComponent,\n    resolve: {\n      tagType: TagTypeResolve\n    },\n    data: {\n      authorities: ['ROLE_USER'],\n      pageTitle: 'App.tagType.home.title'\n    },\n    canActivate: [UserRouteAccessService],\n    outlet: 'popup'\n  }\n];\n"]}]}