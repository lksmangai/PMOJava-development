{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\skill-table\\skill-table-update.component.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\skill-table\\skill-table-update.component.ts","mtime":1561379303459},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b, _c, _d, _e, _f, _g, _h;\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst operators_1 = require(\"rxjs/operators\");\r\nconst ng_jhipster_1 = require(\"ng-jhipster\");\r\nconst skill_table_model_1 = require(\"app/shared/model/skill-table.model\");\r\nconst skill_table_service_1 = require(\"./skill-table.service\");\r\nconst skill_expertise_1 = require(\"app/entities/skill-expertise\");\r\nconst user_contact_1 = require(\"app/entities/user-contact\");\r\nconst im_projects_1 = require(\"app/entities/im-projects\");\r\nconst skills_1 = require(\"app/entities/skills\");\r\nlet SkillTableUpdateComponent = class SkillTableUpdateComponent {\r\n    constructor(jhiAlertService, skillTableService, skillExpertiseService, userContactService, imProjectsService, skillsService, activatedRoute, fb) {\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.skillTableService = skillTableService;\r\n        this.skillExpertiseService = skillExpertiseService;\r\n        this.userContactService = userContactService;\r\n        this.imProjectsService = imProjectsService;\r\n        this.skillsService = skillsService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.fb = fb;\r\n        this.editForm = this.fb.group({\r\n            id: [],\r\n            skillExpertise: [],\r\n            userContact: [],\r\n            imProjects: [],\r\n            skills: []\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ skillTable }) => {\r\n            this.updateForm(skillTable);\r\n            this.skillTable = skillTable;\r\n        });\r\n        this.skillExpertiseService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.skillexpertises = res), (res) => this.onError(res.message));\r\n        this.userContactService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.usercontacts = res), (res) => this.onError(res.message));\r\n        this.imProjectsService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.improjects = res), (res) => this.onError(res.message));\r\n        this.skillsService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.skills = res), (res) => this.onError(res.message));\r\n    }\r\n    updateForm(skillTable) {\r\n        this.editForm.patchValue({\r\n            id: skillTable.id,\r\n            skillExpertise: skillTable.skillExpertise,\r\n            userContact: skillTable.userContact,\r\n            imProjects: skillTable.imProjects,\r\n            skills: skillTable.skills\r\n        });\r\n    }\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n    save() {\r\n        this.isSaving = true;\r\n        const skillTable = this.createFromForm();\r\n        if (skillTable.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.skillTableService.update(skillTable));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.skillTableService.create(skillTable));\r\n        }\r\n    }\r\n    createFromForm() {\r\n        const entity = Object.assign({}, new skill_table_model_1.SkillTable(), { id: this.editForm.get(['id']).value, skillExpertise: this.editForm.get(['skillExpertise']).value, userContact: this.editForm.get(['userContact']).value, imProjects: this.editForm.get(['imProjects']).value, skills: this.editForm.get(['skills']).value });\r\n        return entity;\r\n    }\r\n    subscribeToSaveResponse(result) {\r\n        result.subscribe((res) => this.onSaveSuccess(), (res) => this.onSaveError());\r\n    }\r\n    onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n    onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n    onError(errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n    trackSkillExpertiseById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackUserContactById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackImProjectsById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackSkillsById(index, item) {\r\n        return item.id;\r\n    }\r\n};\r\nSkillTableUpdateComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-skill-table-update',\r\n        templateUrl: './skill-table-update.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof skill_table_service_1.SkillTableService !== \"undefined\" && skill_table_service_1.SkillTableService) === \"function\" ? _b : Object, typeof (_c = typeof skill_expertise_1.SkillExpertiseService !== \"undefined\" && skill_expertise_1.SkillExpertiseService) === \"function\" ? _c : Object, typeof (_d = typeof user_contact_1.UserContactService !== \"undefined\" && user_contact_1.UserContactService) === \"function\" ? _d : Object, typeof (_e = typeof im_projects_1.ImProjectsService !== \"undefined\" && im_projects_1.ImProjectsService) === \"function\" ? _e : Object, typeof (_f = typeof skills_1.SkillsService !== \"undefined\" && skills_1.SkillsService) === \"function\" ? _f : Object, typeof (_g = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _g : Object, typeof (_h = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _h : Object])\r\n], SkillTableUpdateComponent);\r\nexports.SkillTableUpdateComponent = SkillTableUpdateComponent;\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\skill-table\\skill-table-update.component.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\skill-table\\skill-table-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JhiAlertService } from 'ng-jhipster';\nimport { ISkillTable, SkillTable } from 'app/shared/model/skill-table.model';\nimport { SkillTableService } from './skill-table.service';\nimport { ISkillExpertise } from 'app/shared/model/skill-expertise.model';\nimport { SkillExpertiseService } from 'app/entities/skill-expertise';\nimport { IUserContact } from 'app/shared/model/user-contact.model';\nimport { UserContactService } from 'app/entities/user-contact';\nimport { IImProjects } from 'app/shared/model/im-projects.model';\nimport { ImProjectsService } from 'app/entities/im-projects';\nimport { ISkills } from 'app/shared/model/skills.model';\nimport { SkillsService } from 'app/entities/skills';\n\n@Component({\n  selector: 'jhi-skill-table-update',\n  templateUrl: './skill-table-update.component.html'\n})\nexport class SkillTableUpdateComponent implements OnInit {\n  skillTable: ISkillTable;\n  isSaving: boolean;\n\n  skillexpertises: ISkillExpertise[];\n\n  usercontacts: IUserContact[];\n\n  improjects: IImProjects[];\n\n  skills: ISkills[];\n\n  editForm = this.fb.group({\n    id: [],\n    skillExpertise: [],\n    userContact: [],\n    imProjects: [],\n    skills: []\n  });\n\n  constructor(\n    protected jhiAlertService: JhiAlertService,\n    protected skillTableService: SkillTableService,\n    protected skillExpertiseService: SkillExpertiseService,\n    protected userContactService: UserContactService,\n    protected imProjectsService: ImProjectsService,\n    protected skillsService: SkillsService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.isSaving = false;\n    this.activatedRoute.data.subscribe(({ skillTable }) => {\n      this.updateForm(skillTable);\n      this.skillTable = skillTable;\n    });\n    this.skillExpertiseService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<ISkillExpertise[]>) => mayBeOk.ok),\n        map((response: HttpResponse<ISkillExpertise[]>) => response.body)\n      )\n      .subscribe((res: ISkillExpertise[]) => (this.skillexpertises = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.userContactService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IUserContact[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IUserContact[]>) => response.body)\n      )\n      .subscribe((res: IUserContact[]) => (this.usercontacts = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.imProjectsService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IImProjects[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IImProjects[]>) => response.body)\n      )\n      .subscribe((res: IImProjects[]) => (this.improjects = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.skillsService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<ISkills[]>) => mayBeOk.ok),\n        map((response: HttpResponse<ISkills[]>) => response.body)\n      )\n      .subscribe((res: ISkills[]) => (this.skills = res), (res: HttpErrorResponse) => this.onError(res.message));\n  }\n\n  updateForm(skillTable: ISkillTable) {\n    this.editForm.patchValue({\n      id: skillTable.id,\n      skillExpertise: skillTable.skillExpertise,\n      userContact: skillTable.userContact,\n      imProjects: skillTable.imProjects,\n      skills: skillTable.skills\n    });\n  }\n\n  previousState() {\n    window.history.back();\n  }\n\n  save() {\n    this.isSaving = true;\n    const skillTable = this.createFromForm();\n    if (skillTable.id !== undefined) {\n      this.subscribeToSaveResponse(this.skillTableService.update(skillTable));\n    } else {\n      this.subscribeToSaveResponse(this.skillTableService.create(skillTable));\n    }\n  }\n\n  private createFromForm(): ISkillTable {\n    const entity = {\n      ...new SkillTable(),\n      id: this.editForm.get(['id']).value,\n      skillExpertise: this.editForm.get(['skillExpertise']).value,\n      userContact: this.editForm.get(['userContact']).value,\n      imProjects: this.editForm.get(['imProjects']).value,\n      skills: this.editForm.get(['skills']).value\n    };\n    return entity;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<ISkillTable>>) {\n    result.subscribe((res: HttpResponse<ISkillTable>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n  }\n\n  protected onSaveSuccess() {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError() {\n    this.isSaving = false;\n  }\n  protected onError(errorMessage: string) {\n    this.jhiAlertService.error(errorMessage, null, null);\n  }\n\n  trackSkillExpertiseById(index: number, item: ISkillExpertise) {\n    return item.id;\n  }\n\n  trackUserContactById(index: number, item: IUserContact) {\n    return item.id;\n  }\n\n  trackImProjectsById(index: number, item: IImProjects) {\n    return item.id;\n  }\n\n  trackSkillsById(index: number, item: ISkills) {\n    return item.id;\n  }\n}\n"]}]}