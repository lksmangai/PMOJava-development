{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\core\\login\\login.service.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\core\\login\\login.service.ts","mtime":1561374569495},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b;\r\nconst core_1 = require(\"@angular/core\");\r\nconst account_service_1 = require(\"app/core/auth/account.service\");\r\nconst auth_jwt_service_1 = require(\"app/core/auth/auth-jwt.service\");\r\nlet LoginService = class LoginService {\r\n    constructor(accountService, authServerProvider) {\r\n        this.accountService = accountService;\r\n        this.authServerProvider = authServerProvider;\r\n    }\r\n    login(credentials, callback) {\r\n        const cb = callback || function () { };\r\n        return new Promise((resolve, reject) => {\r\n            this.authServerProvider.login(credentials).subscribe(data => {\r\n                this.accountService.identity(true).then(account => {\r\n                    resolve(data);\r\n                });\r\n                return cb();\r\n            }, err => {\r\n                this.logout();\r\n                reject(err);\r\n                return cb(err);\r\n            });\r\n        });\r\n    }\r\n    loginWithToken(jwt, rememberMe) {\r\n        return this.authServerProvider.loginWithToken(jwt, rememberMe);\r\n    }\r\n    logout() {\r\n        this.authServerProvider.logout().subscribe(null, null, () => this.accountService.authenticate(null));\r\n    }\r\n};\r\nLoginService = tslib_1.__decorate([\r\n    core_1.Injectable({ providedIn: 'root' }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof account_service_1.AccountService !== \"undefined\" && account_service_1.AccountService) === \"function\" ? _a : Object, typeof (_b = typeof auth_jwt_service_1.AuthServerProvider !== \"undefined\" && auth_jwt_service_1.AuthServerProvider) === \"function\" ? _b : Object])\r\n], LoginService);\r\nexports.LoginService = LoginService;\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\core\\login\\login.service.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\core\\login\\login.service.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAE3C,mEAA+D;AAC/D,qEAAoE;AAGpE,IAAa,YAAY,GAAzB,MAAa,YAAY;IACvB,YAAoB,cAA8B,EAAU,kBAAsC;QAA9E,mBAAc,GAAd,cAAc,CAAgB;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAEtG,KAAK,CAAC,WAAW,EAAE,QAAS;QAC1B,MAAM,EAAE,GAAG,QAAQ,IAAI,cAAY,CAAC,CAAC;QAErC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,SAAS,CAClD,IAAI,CAAC,EAAE;gBACL,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;oBAChD,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAC;gBACH,OAAO,EAAE,EAAE,CAAC;YACd,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;gBACZ,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,GAAG,EAAE,UAAU;QAC5B,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IACjE,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACvG,CAAC;CACF,CAAA;AA9BY,YAAY;IADxB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAEG,gCAAc,oBAAd,gCAAc,oDAA8B,qCAAkB,oBAAlB,qCAAkB;GADvF,YAAY,CA8BxB;AA9BY,oCAAY","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { AccountService } from 'app/core/auth/account.service';\nimport { AuthServerProvider } from 'app/core/auth/auth-jwt.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LoginService {\n  constructor(private accountService: AccountService, private authServerProvider: AuthServerProvider) {}\n\n  login(credentials, callback?) {\n    const cb = callback || function() {};\n\n    return new Promise((resolve, reject) => {\n      this.authServerProvider.login(credentials).subscribe(\n        data => {\n          this.accountService.identity(true).then(account => {\n            resolve(data);\n          });\n          return cb();\n        },\n        err => {\n          this.logout();\n          reject(err);\n          return cb(err);\n        }\n      );\n    });\n  }\n\n  loginWithToken(jwt, rememberMe) {\n    return this.authServerProvider.loginWithToken(jwt, rememberMe);\n  }\n\n  logout() {\n    this.authServerProvider.logout().subscribe(null, null, () => this.accountService.authenticate(null));\n  }\n}\n"]}]}