{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\project-tag\\project-tag-update.component.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\project-tag\\project-tag-update.component.ts","mtime":1561379319164},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst operators_1 = require(\"rxjs/operators\");\r\nconst ng_jhipster_1 = require(\"ng-jhipster\");\r\nconst project_tag_model_1 = require(\"app/shared/model/project-tag.model\");\r\nconst project_tag_service_1 = require(\"./project-tag.service\");\r\nconst tag_type_1 = require(\"app/entities/tag-type\");\r\nconst im_employee_1 = require(\"app/entities/im-employee\");\r\nconst im_projects_1 = require(\"app/entities/im-projects\");\r\nlet ProjectTagUpdateComponent = class ProjectTagUpdateComponent {\r\n    constructor(jhiAlertService, projectTagService, tagTypeService, imEmployeeService, imProjectsService, activatedRoute, fb) {\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.projectTagService = projectTagService;\r\n        this.tagTypeService = tagTypeService;\r\n        this.imEmployeeService = imEmployeeService;\r\n        this.imProjectsService = imProjectsService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.fb = fb;\r\n        this.editForm = this.fb.group({\r\n            id: [],\r\n            code: [],\r\n            name: [],\r\n            description: [],\r\n            flag: [],\r\n            color: [],\r\n            tagType: [],\r\n            imEmployee: [],\r\n            imProjects: []\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ projectTag }) => {\r\n            this.updateForm(projectTag);\r\n            this.projectTag = projectTag;\r\n        });\r\n        this.tagTypeService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.tagtypes = res), (res) => this.onError(res.message));\r\n        this.imEmployeeService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.imemployees = res), (res) => this.onError(res.message));\r\n        this.imProjectsService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.improjects = res), (res) => this.onError(res.message));\r\n    }\r\n    updateForm(projectTag) {\r\n        this.editForm.patchValue({\r\n            id: projectTag.id,\r\n            code: projectTag.code,\r\n            name: projectTag.name,\r\n            description: projectTag.description,\r\n            flag: projectTag.flag,\r\n            color: projectTag.color,\r\n            tagType: projectTag.tagType,\r\n            imEmployee: projectTag.imEmployee,\r\n            imProjects: projectTag.imProjects\r\n        });\r\n    }\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n    save() {\r\n        this.isSaving = true;\r\n        const projectTag = this.createFromForm();\r\n        if (projectTag.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.projectTagService.update(projectTag));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.projectTagService.create(projectTag));\r\n        }\r\n    }\r\n    createFromForm() {\r\n        const entity = Object.assign({}, new project_tag_model_1.ProjectTag(), { id: this.editForm.get(['id']).value, code: this.editForm.get(['code']).value, name: this.editForm.get(['name']).value, description: this.editForm.get(['description']).value, flag: this.editForm.get(['flag']).value, color: this.editForm.get(['color']).value, tagType: this.editForm.get(['tagType']).value, imEmployee: this.editForm.get(['imEmployee']).value, imProjects: this.editForm.get(['imProjects']).value });\r\n        return entity;\r\n    }\r\n    subscribeToSaveResponse(result) {\r\n        result.subscribe((res) => this.onSaveSuccess(), (res) => this.onSaveError());\r\n    }\r\n    onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n    onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n    onError(errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n    trackTagTypeById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackImEmployeeById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackImProjectsById(index, item) {\r\n        return item.id;\r\n    }\r\n};\r\nProjectTagUpdateComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-project-tag-update',\r\n        templateUrl: './project-tag-update.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof project_tag_service_1.ProjectTagService !== \"undefined\" && project_tag_service_1.ProjectTagService) === \"function\" ? _b : Object, typeof (_c = typeof tag_type_1.TagTypeService !== \"undefined\" && tag_type_1.TagTypeService) === \"function\" ? _c : Object, typeof (_d = typeof im_employee_1.ImEmployeeService !== \"undefined\" && im_employee_1.ImEmployeeService) === \"function\" ? _d : Object, typeof (_e = typeof im_projects_1.ImProjectsService !== \"undefined\" && im_projects_1.ImProjectsService) === \"function\" ? _e : Object, typeof (_f = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _f : Object, typeof (_g = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _g : Object])\r\n], ProjectTagUpdateComponent);\r\nexports.ProjectTagUpdateComponent = ProjectTagUpdateComponent;\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\project-tag\\project-tag-update.component.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\project-tag\\project-tag-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JhiAlertService } from 'ng-jhipster';\nimport { IProjectTag, ProjectTag } from 'app/shared/model/project-tag.model';\nimport { ProjectTagService } from './project-tag.service';\nimport { ITagType } from 'app/shared/model/tag-type.model';\nimport { TagTypeService } from 'app/entities/tag-type';\nimport { IImEmployee } from 'app/shared/model/im-employee.model';\nimport { ImEmployeeService } from 'app/entities/im-employee';\nimport { IImProjects } from 'app/shared/model/im-projects.model';\nimport { ImProjectsService } from 'app/entities/im-projects';\n\n@Component({\n  selector: 'jhi-project-tag-update',\n  templateUrl: './project-tag-update.component.html'\n})\nexport class ProjectTagUpdateComponent implements OnInit {\n  projectTag: IProjectTag;\n  isSaving: boolean;\n\n  tagtypes: ITagType[];\n\n  imemployees: IImEmployee[];\n\n  improjects: IImProjects[];\n\n  editForm = this.fb.group({\n    id: [],\n    code: [],\n    name: [],\n    description: [],\n    flag: [],\n    color: [],\n    tagType: [],\n    imEmployee: [],\n    imProjects: []\n  });\n\n  constructor(\n    protected jhiAlertService: JhiAlertService,\n    protected projectTagService: ProjectTagService,\n    protected tagTypeService: TagTypeService,\n    protected imEmployeeService: ImEmployeeService,\n    protected imProjectsService: ImProjectsService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.isSaving = false;\n    this.activatedRoute.data.subscribe(({ projectTag }) => {\n      this.updateForm(projectTag);\n      this.projectTag = projectTag;\n    });\n    this.tagTypeService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<ITagType[]>) => mayBeOk.ok),\n        map((response: HttpResponse<ITagType[]>) => response.body)\n      )\n      .subscribe((res: ITagType[]) => (this.tagtypes = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.imEmployeeService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IImEmployee[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IImEmployee[]>) => response.body)\n      )\n      .subscribe((res: IImEmployee[]) => (this.imemployees = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.imProjectsService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IImProjects[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IImProjects[]>) => response.body)\n      )\n      .subscribe((res: IImProjects[]) => (this.improjects = res), (res: HttpErrorResponse) => this.onError(res.message));\n  }\n\n  updateForm(projectTag: IProjectTag) {\n    this.editForm.patchValue({\n      id: projectTag.id,\n      code: projectTag.code,\n      name: projectTag.name,\n      description: projectTag.description,\n      flag: projectTag.flag,\n      color: projectTag.color,\n      tagType: projectTag.tagType,\n      imEmployee: projectTag.imEmployee,\n      imProjects: projectTag.imProjects\n    });\n  }\n\n  previousState() {\n    window.history.back();\n  }\n\n  save() {\n    this.isSaving = true;\n    const projectTag = this.createFromForm();\n    if (projectTag.id !== undefined) {\n      this.subscribeToSaveResponse(this.projectTagService.update(projectTag));\n    } else {\n      this.subscribeToSaveResponse(this.projectTagService.create(projectTag));\n    }\n  }\n\n  private createFromForm(): IProjectTag {\n    const entity = {\n      ...new ProjectTag(),\n      id: this.editForm.get(['id']).value,\n      code: this.editForm.get(['code']).value,\n      name: this.editForm.get(['name']).value,\n      description: this.editForm.get(['description']).value,\n      flag: this.editForm.get(['flag']).value,\n      color: this.editForm.get(['color']).value,\n      tagType: this.editForm.get(['tagType']).value,\n      imEmployee: this.editForm.get(['imEmployee']).value,\n      imProjects: this.editForm.get(['imProjects']).value\n    };\n    return entity;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IProjectTag>>) {\n    result.subscribe((res: HttpResponse<IProjectTag>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n  }\n\n  protected onSaveSuccess() {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError() {\n    this.isSaving = false;\n  }\n  protected onError(errorMessage: string) {\n    this.jhiAlertService.error(errorMessage, null, null);\n  }\n\n  trackTagTypeById(index: number, item: ITagType) {\n    return item.id;\n  }\n\n  trackImEmployeeById(index: number, item: IImEmployee) {\n    return item.id;\n  }\n\n  trackImProjectsById(index: number, item: IImProjects) {\n    return item.id;\n  }\n}\n"]}]}