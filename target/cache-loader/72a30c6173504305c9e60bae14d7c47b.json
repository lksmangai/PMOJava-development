{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\project-allocation\\project-allocation-update.component.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\project-allocation\\project-allocation-update.component.ts","mtime":1561379296975},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst operators_1 = require(\"rxjs/operators\");\r\nconst ng_jhipster_1 = require(\"ng-jhipster\");\r\nconst project_allocation_model_1 = require(\"app/shared/model/project-allocation.model\");\r\nconst project_allocation_service_1 = require(\"./project-allocation.service\");\r\nconst im_employee_1 = require(\"app/entities/im-employee\");\r\nconst im_projects_1 = require(\"app/entities/im-projects\");\r\nconst project_roles_1 = require(\"app/entities/project-roles\");\r\nlet ProjectAllocationUpdateComponent = class ProjectAllocationUpdateComponent {\r\n    constructor(jhiAlertService, projectAllocationService, imEmployeeService, imProjectsService, projectRolesService, activatedRoute, fb) {\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.projectAllocationService = projectAllocationService;\r\n        this.imEmployeeService = imEmployeeService;\r\n        this.imProjectsService = imProjectsService;\r\n        this.projectRolesService = projectRolesService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.fb = fb;\r\n        this.editForm = this.fb.group({\r\n            id: [],\r\n            percentage: [],\r\n            imEmployee: [],\r\n            imProjects: [],\r\n            projectRoles: []\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ projectAllocation }) => {\r\n            this.updateForm(projectAllocation);\r\n            this.projectAllocation = projectAllocation;\r\n        });\r\n        this.imEmployeeService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.imemployees = res), (res) => this.onError(res.message));\r\n        this.imProjectsService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.improjects = res), (res) => this.onError(res.message));\r\n        this.projectRolesService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projectroles = res), (res) => this.onError(res.message));\r\n    }\r\n    updateForm(projectAllocation) {\r\n        this.editForm.patchValue({\r\n            id: projectAllocation.id,\r\n            percentage: projectAllocation.percentage,\r\n            imEmployee: projectAllocation.imEmployee,\r\n            imProjects: projectAllocation.imProjects,\r\n            projectRoles: projectAllocation.projectRoles\r\n        });\r\n    }\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n    save() {\r\n        this.isSaving = true;\r\n        const projectAllocation = this.createFromForm();\r\n        if (projectAllocation.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.projectAllocationService.update(projectAllocation));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.projectAllocationService.create(projectAllocation));\r\n        }\r\n    }\r\n    createFromForm() {\r\n        const entity = Object.assign({}, new project_allocation_model_1.ProjectAllocation(), { id: this.editForm.get(['id']).value, percentage: this.editForm.get(['percentage']).value, imEmployee: this.editForm.get(['imEmployee']).value, imProjects: this.editForm.get(['imProjects']).value, projectRoles: this.editForm.get(['projectRoles']).value });\r\n        return entity;\r\n    }\r\n    subscribeToSaveResponse(result) {\r\n        result.subscribe((res) => this.onSaveSuccess(), (res) => this.onSaveError());\r\n    }\r\n    onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n    onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n    onError(errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n    trackImEmployeeById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackImProjectsById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackProjectRolesById(index, item) {\r\n        return item.id;\r\n    }\r\n};\r\nProjectAllocationUpdateComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-project-allocation-update',\r\n        templateUrl: './project-allocation-update.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof project_allocation_service_1.ProjectAllocationService !== \"undefined\" && project_allocation_service_1.ProjectAllocationService) === \"function\" ? _b : Object, typeof (_c = typeof im_employee_1.ImEmployeeService !== \"undefined\" && im_employee_1.ImEmployeeService) === \"function\" ? _c : Object, typeof (_d = typeof im_projects_1.ImProjectsService !== \"undefined\" && im_projects_1.ImProjectsService) === \"function\" ? _d : Object, typeof (_e = typeof project_roles_1.ProjectRolesService !== \"undefined\" && project_roles_1.ProjectRolesService) === \"function\" ? _e : Object, typeof (_f = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _f : Object, typeof (_g = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _g : Object])\r\n], ProjectAllocationUpdateComponent);\r\nexports.ProjectAllocationUpdateComponent = ProjectAllocationUpdateComponent;\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\project-allocation\\project-allocation-update.component.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\project-allocation\\project-allocation-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JhiAlertService } from 'ng-jhipster';\nimport { IProjectAllocation, ProjectAllocation } from 'app/shared/model/project-allocation.model';\nimport { ProjectAllocationService } from './project-allocation.service';\nimport { IImEmployee } from 'app/shared/model/im-employee.model';\nimport { ImEmployeeService } from 'app/entities/im-employee';\nimport { IImProjects } from 'app/shared/model/im-projects.model';\nimport { ImProjectsService } from 'app/entities/im-projects';\nimport { IProjectRoles } from 'app/shared/model/project-roles.model';\nimport { ProjectRolesService } from 'app/entities/project-roles';\n\n@Component({\n  selector: 'jhi-project-allocation-update',\n  templateUrl: './project-allocation-update.component.html'\n})\nexport class ProjectAllocationUpdateComponent implements OnInit {\n  projectAllocation: IProjectAllocation;\n  isSaving: boolean;\n\n  imemployees: IImEmployee[];\n\n  improjects: IImProjects[];\n\n  projectroles: IProjectRoles[];\n\n  editForm = this.fb.group({\n    id: [],\n    percentage: [],\n    imEmployee: [],\n    imProjects: [],\n    projectRoles: []\n  });\n\n  constructor(\n    protected jhiAlertService: JhiAlertService,\n    protected projectAllocationService: ProjectAllocationService,\n    protected imEmployeeService: ImEmployeeService,\n    protected imProjectsService: ImProjectsService,\n    protected projectRolesService: ProjectRolesService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.isSaving = false;\n    this.activatedRoute.data.subscribe(({ projectAllocation }) => {\n      this.updateForm(projectAllocation);\n      this.projectAllocation = projectAllocation;\n    });\n    this.imEmployeeService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IImEmployee[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IImEmployee[]>) => response.body)\n      )\n      .subscribe((res: IImEmployee[]) => (this.imemployees = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.imProjectsService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IImProjects[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IImProjects[]>) => response.body)\n      )\n      .subscribe((res: IImProjects[]) => (this.improjects = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.projectRolesService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectRoles[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectRoles[]>) => response.body)\n      )\n      .subscribe((res: IProjectRoles[]) => (this.projectroles = res), (res: HttpErrorResponse) => this.onError(res.message));\n  }\n\n  updateForm(projectAllocation: IProjectAllocation) {\n    this.editForm.patchValue({\n      id: projectAllocation.id,\n      percentage: projectAllocation.percentage,\n      imEmployee: projectAllocation.imEmployee,\n      imProjects: projectAllocation.imProjects,\n      projectRoles: projectAllocation.projectRoles\n    });\n  }\n\n  previousState() {\n    window.history.back();\n  }\n\n  save() {\n    this.isSaving = true;\n    const projectAllocation = this.createFromForm();\n    if (projectAllocation.id !== undefined) {\n      this.subscribeToSaveResponse(this.projectAllocationService.update(projectAllocation));\n    } else {\n      this.subscribeToSaveResponse(this.projectAllocationService.create(projectAllocation));\n    }\n  }\n\n  private createFromForm(): IProjectAllocation {\n    const entity = {\n      ...new ProjectAllocation(),\n      id: this.editForm.get(['id']).value,\n      percentage: this.editForm.get(['percentage']).value,\n      imEmployee: this.editForm.get(['imEmployee']).value,\n      imProjects: this.editForm.get(['imProjects']).value,\n      projectRoles: this.editForm.get(['projectRoles']).value\n    };\n    return entity;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IProjectAllocation>>) {\n    result.subscribe((res: HttpResponse<IProjectAllocation>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n  }\n\n  protected onSaveSuccess() {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError() {\n    this.isSaving = false;\n  }\n  protected onError(errorMessage: string) {\n    this.jhiAlertService.error(errorMessage, null, null);\n  }\n\n  trackImEmployeeById(index: number, item: IImEmployee) {\n    return item.id;\n  }\n\n  trackImProjectsById(index: number, item: IImProjects) {\n    return item.id;\n  }\n\n  trackProjectRolesById(index: number, item: IProjectRoles) {\n    return item.id;\n  }\n}\n"]}]}