{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\admin\\user-management\\user-management.route.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\admin\\user-management\\user-management.route.ts","mtime":1561374568182},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b;\r\nconst core_1 = require(\"@angular/core\");\r\nconst ng_jhipster_1 = require(\"ng-jhipster\");\r\nconst core_2 = require(\"app/core\");\r\nconst user_management_component_1 = require(\"./user-management.component\");\r\nconst user_management_detail_component_1 = require(\"./user-management-detail.component\");\r\nconst user_management_update_component_1 = require(\"./user-management-update.component\");\r\nlet UserResolve = class UserResolve {\r\n    constructor(accountService) {\r\n        this.accountService = accountService;\r\n    }\r\n    canActivate() {\r\n        return this.accountService.identity().then(account => this.accountService.hasAnyAuthority(['ROLE_ADMIN']));\r\n    }\r\n};\r\nUserResolve = tslib_1.__decorate([\r\n    core_1.Injectable({ providedIn: 'root' }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _a : Object])\r\n], UserResolve);\r\nexports.UserResolve = UserResolve;\r\nlet UserMgmtResolve = class UserMgmtResolve {\r\n    constructor(service) {\r\n        this.service = service;\r\n    }\r\n    resolve(route, state) {\r\n        const id = route.params['login'] ? route.params['login'] : null;\r\n        if (id) {\r\n            return this.service.find(id);\r\n        }\r\n        return new core_2.User();\r\n    }\r\n};\r\nUserMgmtResolve = tslib_1.__decorate([\r\n    core_1.Injectable({ providedIn: 'root' }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" ? _b : Object])\r\n], UserMgmtResolve);\r\nexports.UserMgmtResolve = UserMgmtResolve;\r\nexports.userMgmtRoute = [\r\n    {\r\n        path: 'user-management',\r\n        component: user_management_component_1.UserMgmtComponent,\r\n        resolve: {\r\n            pagingParams: ng_jhipster_1.JhiResolvePagingParams\r\n        },\r\n        data: {\r\n            pageTitle: 'userManagement.home.title',\r\n            defaultSort: 'id,asc'\r\n        }\r\n    },\r\n    {\r\n        path: 'user-management/:login/view',\r\n        component: user_management_detail_component_1.UserMgmtDetailComponent,\r\n        resolve: {\r\n            user: UserMgmtResolve\r\n        },\r\n        data: {\r\n            pageTitle: 'userManagement.home.title'\r\n        }\r\n    },\r\n    {\r\n        path: 'user-management/new',\r\n        component: user_management_update_component_1.UserMgmtUpdateComponent,\r\n        resolve: {\r\n            user: UserMgmtResolve\r\n        }\r\n    },\r\n    {\r\n        path: 'user-management/:login/edit',\r\n        component: user_management_update_component_1.UserMgmtUpdateComponent,\r\n        resolve: {\r\n            user: UserMgmtResolve\r\n        }\r\n    }\r\n];\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\admin\\user-management\\user-management.route.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\admin\\user-management\\user-management.route.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAE3C,6CAAwE;AAExE,mCAA6D;AAC7D,2EAAgE;AAChE,yFAA6E;AAC7E,yFAA6E;AAG7E,IAAa,WAAW,GAAxB,MAAa,WAAW;IACtB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtD,WAAW;QACT,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC7G,CAAC;CACF,CAAA;AANY,WAAW;IADvB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAEG,qBAAc,oBAAd,qBAAc;GADvC,WAAW,CAMvB;AANY,kCAAW;AASxB,IAAa,eAAe,GAA5B,MAAa,eAAe;IAC1B,YAAoB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;IAAG,CAAC;IAE5C,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC/D,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAChE,IAAI,EAAE,EAAE;YACN,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC9B;QACD,OAAO,IAAI,WAAI,EAAE,CAAC;IACpB,CAAC;CACF,CAAA;AAVY,eAAe;IAD3B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAEJ,kBAAW,oBAAX,kBAAW;GAD7B,eAAe,CAU3B;AAVY,0CAAe;AAYf,QAAA,aAAa,GAAW;IACnC;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,6CAAiB;QAC5B,OAAO,EAAE;YACP,YAAY,EAAE,oCAAsB;SACrC;QACD,IAAI,EAAE;YACJ,SAAS,EAAE,2BAA2B;YACtC,WAAW,EAAE,QAAQ;SACtB;KACF;IACD;QACE,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,0DAAuB;QAClC,OAAO,EAAE;YACP,IAAI,EAAE,eAAe;SACtB;QACD,IAAI,EAAE;YACJ,SAAS,EAAE,2BAA2B;SACvC;KACF;IACD;QACE,IAAI,EAAE,qBAAqB;QAC3B,SAAS,EAAE,0DAAuB;QAClC,OAAO,EAAE;YACP,IAAI,EAAE,eAAe;SACtB;KACF;IACD;QACE,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,0DAAuB;QAClC,OAAO,EAAE;YACP,IAAI,EAAE,eAAe;SACtB;KACF;CACF,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes, CanActivate } from '@angular/router';\nimport { JhiPaginationUtil, JhiResolvePagingParams } from 'ng-jhipster';\n\nimport { AccountService, User, UserService } from 'app/core';\nimport { UserMgmtComponent } from './user-management.component';\nimport { UserMgmtDetailComponent } from './user-management-detail.component';\nimport { UserMgmtUpdateComponent } from './user-management-update.component';\n\n@Injectable({ providedIn: 'root' })\nexport class UserResolve implements CanActivate {\n  constructor(private accountService: AccountService) {}\n\n  canActivate() {\n    return this.accountService.identity().then(account => this.accountService.hasAnyAuthority(['ROLE_ADMIN']));\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class UserMgmtResolve implements Resolve<any> {\n  constructor(private service: UserService) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const id = route.params['login'] ? route.params['login'] : null;\n    if (id) {\n      return this.service.find(id);\n    }\n    return new User();\n  }\n}\n\nexport const userMgmtRoute: Routes = [\n  {\n    path: 'user-management',\n    component: UserMgmtComponent,\n    resolve: {\n      pagingParams: JhiResolvePagingParams\n    },\n    data: {\n      pageTitle: 'userManagement.home.title',\n      defaultSort: 'id,asc'\n    }\n  },\n  {\n    path: 'user-management/:login/view',\n    component: UserMgmtDetailComponent,\n    resolve: {\n      user: UserMgmtResolve\n    },\n    data: {\n      pageTitle: 'userManagement.home.title'\n    }\n  },\n  {\n    path: 'user-management/new',\n    component: UserMgmtUpdateComponent,\n    resolve: {\n      user: UserMgmtResolve\n    }\n  },\n  {\n    path: 'user-management/:login/edit',\n    component: UserMgmtUpdateComponent,\n    resolve: {\n      user: UserMgmtResolve\n    }\n  }\n];\n"]}]}