{"remainingRequest":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js??ref--9-3!F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\im-projects\\im-projects-update.component.ts","dependencies":[{"path":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\im-projects\\im-projects-update.component.ts","mtime":1561379274996},{"path":"F:\\25june\\PMQJava\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"F:\\25june\\PMQJava\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\25june\\PMQJava\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst operators_1 = require(\"rxjs/operators\");\r\nconst moment = require(\"moment\");\r\nconst input_constants_1 = require(\"app/shared/constants/input.constants\");\r\nconst ng_jhipster_1 = require(\"ng-jhipster\");\r\nconst im_projects_model_1 = require(\"app/shared/model/im-projects.model\");\r\nconst im_projects_service_1 = require(\"./im-projects.service\");\r\nconst project_initiative_id_1 = require(\"app/entities/project-initiative-id\");\r\nconst project_businessgoal_id_1 = require(\"app/entities/project-businessgoal-id\");\r\nconst project_subgoal_id_1 = require(\"app/entities/project-subgoal-id\");\r\nconst project_maingoal_id_1 = require(\"app/entities/project-maingoal-id\");\r\nconst project_bucket_id_1 = require(\"app/entities/project-bucket-id\");\r\nconst project_cost_center_id_1 = require(\"app/entities/project-cost-center-id\");\r\nconst opportunity_priority_id_1 = require(\"app/entities/opportunity-priority-id\");\r\nconst backlog_practice_1 = require(\"app/entities/backlog-practice\");\r\nconst project_theme_1 = require(\"app/entities/project-theme\");\r\nconst project_class_1 = require(\"app/entities/project-class\");\r\nconst project_vertical_1 = require(\"app/entities/project-vertical\");\r\nconst project_board_id_1 = require(\"app/entities/project-board-id\");\r\nconst project_status_id_1 = require(\"app/entities/project-status-id\");\r\nconst project_type_id_1 = require(\"app/entities/project-type-id\");\r\nconst im_employee_1 = require(\"app/entities/im-employee\");\r\nlet ImProjectsUpdateComponent = class ImProjectsUpdateComponent {\r\n    constructor(jhiAlertService, imProjectsService, projectInitiativeIdService, projectBusinessgoalIdService, projectSubgoalIdService, projectMaingoalIdService, projectBucketIdService, projectCostCenterIdService, opportunityPriorityIdService, backlogPracticeService, projectThemeService, projectClassService, projectVerticalService, projectBoardIdService, projectStatusIdService, projectTypeIdService, imEmployeeService, activatedRoute, fb) {\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.imProjectsService = imProjectsService;\r\n        this.projectInitiativeIdService = projectInitiativeIdService;\r\n        this.projectBusinessgoalIdService = projectBusinessgoalIdService;\r\n        this.projectSubgoalIdService = projectSubgoalIdService;\r\n        this.projectMaingoalIdService = projectMaingoalIdService;\r\n        this.projectBucketIdService = projectBucketIdService;\r\n        this.projectCostCenterIdService = projectCostCenterIdService;\r\n        this.opportunityPriorityIdService = opportunityPriorityIdService;\r\n        this.backlogPracticeService = backlogPracticeService;\r\n        this.projectThemeService = projectThemeService;\r\n        this.projectClassService = projectClassService;\r\n        this.projectVerticalService = projectVerticalService;\r\n        this.projectBoardIdService = projectBoardIdService;\r\n        this.projectStatusIdService = projectStatusIdService;\r\n        this.projectTypeIdService = projectTypeIdService;\r\n        this.imEmployeeService = imEmployeeService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.fb = fb;\r\n        this.editForm = this.fb.group({\r\n            id: [],\r\n            projectName: [null, [forms_1.Validators.required]],\r\n            projectNr: [null, [forms_1.Validators.required]],\r\n            projectPath: [null, [forms_1.Validators.required]],\r\n            treeSortkey: [],\r\n            maxChildSortkey: [],\r\n            description: [],\r\n            billingTypeId: [],\r\n            note: [],\r\n            requiresReportP: [],\r\n            projectBudget: [],\r\n            projectRisk: [],\r\n            corporateSponsor: [],\r\n            percentCompleted: [],\r\n            projectBudgetHours: [],\r\n            costQuotesCache: [],\r\n            costInvoicesCache: [],\r\n            costTimesheetPlannedCache: [],\r\n            costPurchaseOrdersCache: [],\r\n            costBillsCache: [],\r\n            costTimesheetLoggedCache: [],\r\n            endDate: [],\r\n            startDate: [],\r\n            templateP: [],\r\n            sortOrder: [],\r\n            reportedHoursCache: [],\r\n            costExpensePlannedCache: [],\r\n            costExpenseLoggedCache: [],\r\n            confirmDate: [],\r\n            costDeliveryNotesCache: [],\r\n            costCacheDirty: [],\r\n            milestoneP: [],\r\n            releaseItemP: [],\r\n            presalesProbability: [],\r\n            presalesValue: [],\r\n            reportedDaysCache: [],\r\n            presalesValueCurrency: [],\r\n            opportunitySalesStageId: [],\r\n            opportunityCampaignId: [],\r\n            scoreRevenue: [],\r\n            scoreStrategic: [],\r\n            scoreFinanceNpv: [],\r\n            scoreCustomers: [],\r\n            scoreFinanceCost: [],\r\n            costBillsPlanned: [],\r\n            costExpensesPlanned: [],\r\n            scoreRisk: [],\r\n            scoreCapabilities: [],\r\n            scoreEinanceRoi: [],\r\n            projectUserwiseBoard: [],\r\n            projectBringNextday: [],\r\n            projectBringSameboard: [],\r\n            projectNewboardEverytime: [],\r\n            projectUserwiseBoard2: [],\r\n            projectBringSameboard2: [],\r\n            projectNewboard2Everytime: [],\r\n            projectNewboard2Always: [],\r\n            projectReportWeekly: [],\r\n            scoreGain: [],\r\n            scoreLoss: [],\r\n            scoreDelivery: [],\r\n            scoreOperations: [],\r\n            scoreWhy: [],\r\n            javaServices: [],\r\n            netServices: [],\r\n            collectionLink: [],\r\n            trainingLink: [],\r\n            collectionName: [],\r\n            trainingName: [],\r\n            trainingDoc: [],\r\n            testingRichtext: [],\r\n            templateCategory: [],\r\n            dType: [],\r\n            dOption: [],\r\n            dFilter: [],\r\n            dId: [],\r\n            tType: [],\r\n            tOption: [],\r\n            tFilter: [],\r\n            tId: [],\r\n            risktype: [],\r\n            riskimpact: [],\r\n            riskprobability: [],\r\n            projectInitiativeId: [],\r\n            projectBusinessgoalId: [],\r\n            projectSubgoalId: [],\r\n            projectMaingoalId: [],\r\n            projectBucketId: [],\r\n            projectCostCenterId: [],\r\n            opportunityPriorityId: [],\r\n            backlogPractice: [],\r\n            projectTheme: [],\r\n            projectClass: [],\r\n            projectVertical: [],\r\n            projectBoardId: [],\r\n            projectBoard2Id: [],\r\n            projectStatusId: [],\r\n            projectTypeId: [],\r\n            projectLeadId: [],\r\n            parentId: []\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ imProjects }) => {\r\n            this.updateForm(imProjects);\r\n            this.imProjects = imProjects;\r\n        });\r\n        this.projectInitiativeIdService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projectinitiativeids = res), (res) => this.onError(res.message));\r\n        this.projectBusinessgoalIdService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projectbusinessgoalids = res), (res) => this.onError(res.message));\r\n        this.projectSubgoalIdService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projectsubgoalids = res), (res) => this.onError(res.message));\r\n        this.projectMaingoalIdService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projectmaingoalids = res), (res) => this.onError(res.message));\r\n        this.projectBucketIdService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projectbucketids = res), (res) => this.onError(res.message));\r\n        this.projectCostCenterIdService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projectcostcenterids = res), (res) => this.onError(res.message));\r\n        this.opportunityPriorityIdService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.opportunitypriorityids = res), (res) => this.onError(res.message));\r\n        this.backlogPracticeService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.backlogpractices = res), (res) => this.onError(res.message));\r\n        this.projectThemeService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projectthemes = res), (res) => this.onError(res.message));\r\n        this.projectClassService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projectclasses = res), (res) => this.onError(res.message));\r\n        this.projectVerticalService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projectverticals = res), (res) => this.onError(res.message));\r\n        this.projectBoardIdService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projectboardids = res), (res) => this.onError(res.message));\r\n        this.projectStatusIdService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projectstatusids = res), (res) => this.onError(res.message));\r\n        this.projectTypeIdService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.projecttypeids = res), (res) => this.onError(res.message));\r\n        this.imEmployeeService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.imemployees = res), (res) => this.onError(res.message));\r\n        this.imProjectsService\r\n            .query()\r\n            .pipe(operators_1.filter((mayBeOk) => mayBeOk.ok), operators_1.map((response) => response.body))\r\n            .subscribe((res) => (this.improjects = res), (res) => this.onError(res.message));\r\n    }\r\n    updateForm(imProjects) {\r\n        this.editForm.patchValue({\r\n            id: imProjects.id,\r\n            projectName: imProjects.projectName,\r\n            projectNr: imProjects.projectNr,\r\n            projectPath: imProjects.projectPath,\r\n            treeSortkey: imProjects.treeSortkey,\r\n            maxChildSortkey: imProjects.maxChildSortkey,\r\n            description: imProjects.description,\r\n            billingTypeId: imProjects.billingTypeId,\r\n            note: imProjects.note,\r\n            requiresReportP: imProjects.requiresReportP,\r\n            projectBudget: imProjects.projectBudget,\r\n            projectRisk: imProjects.projectRisk,\r\n            corporateSponsor: imProjects.corporateSponsor,\r\n            percentCompleted: imProjects.percentCompleted,\r\n            projectBudgetHours: imProjects.projectBudgetHours,\r\n            costQuotesCache: imProjects.costQuotesCache,\r\n            costInvoicesCache: imProjects.costInvoicesCache,\r\n            costTimesheetPlannedCache: imProjects.costTimesheetPlannedCache,\r\n            costPurchaseOrdersCache: imProjects.costPurchaseOrdersCache,\r\n            costBillsCache: imProjects.costBillsCache,\r\n            costTimesheetLoggedCache: imProjects.costTimesheetLoggedCache,\r\n            endDate: imProjects.endDate != null ? imProjects.endDate.format(input_constants_1.DATE_TIME_FORMAT) : null,\r\n            startDate: imProjects.startDate != null ? imProjects.startDate.format(input_constants_1.DATE_TIME_FORMAT) : null,\r\n            templateP: imProjects.templateP,\r\n            sortOrder: imProjects.sortOrder,\r\n            reportedHoursCache: imProjects.reportedHoursCache,\r\n            costExpensePlannedCache: imProjects.costExpensePlannedCache,\r\n            costExpenseLoggedCache: imProjects.costExpenseLoggedCache,\r\n            confirmDate: imProjects.confirmDate != null ? imProjects.confirmDate.format(input_constants_1.DATE_TIME_FORMAT) : null,\r\n            costDeliveryNotesCache: imProjects.costDeliveryNotesCache,\r\n            costCacheDirty: imProjects.costCacheDirty != null ? imProjects.costCacheDirty.format(input_constants_1.DATE_TIME_FORMAT) : null,\r\n            milestoneP: imProjects.milestoneP,\r\n            releaseItemP: imProjects.releaseItemP,\r\n            presalesProbability: imProjects.presalesProbability,\r\n            presalesValue: imProjects.presalesValue,\r\n            reportedDaysCache: imProjects.reportedDaysCache,\r\n            presalesValueCurrency: imProjects.presalesValueCurrency,\r\n            opportunitySalesStageId: imProjects.opportunitySalesStageId,\r\n            opportunityCampaignId: imProjects.opportunityCampaignId,\r\n            scoreRevenue: imProjects.scoreRevenue,\r\n            scoreStrategic: imProjects.scoreStrategic,\r\n            scoreFinanceNpv: imProjects.scoreFinanceNpv,\r\n            scoreCustomers: imProjects.scoreCustomers,\r\n            scoreFinanceCost: imProjects.scoreFinanceCost,\r\n            costBillsPlanned: imProjects.costBillsPlanned,\r\n            costExpensesPlanned: imProjects.costExpensesPlanned,\r\n            scoreRisk: imProjects.scoreRisk,\r\n            scoreCapabilities: imProjects.scoreCapabilities,\r\n            scoreEinanceRoi: imProjects.scoreEinanceRoi,\r\n            projectUserwiseBoard: imProjects.projectUserwiseBoard,\r\n            projectBringNextday: imProjects.projectBringNextday,\r\n            projectBringSameboard: imProjects.projectBringSameboard,\r\n            projectNewboardEverytime: imProjects.projectNewboardEverytime,\r\n            projectUserwiseBoard2: imProjects.projectUserwiseBoard2,\r\n            projectBringSameboard2: imProjects.projectBringSameboard2,\r\n            projectNewboard2Everytime: imProjects.projectNewboard2Everytime,\r\n            projectNewboard2Always: imProjects.projectNewboard2Always,\r\n            projectReportWeekly: imProjects.projectReportWeekly,\r\n            scoreGain: imProjects.scoreGain,\r\n            scoreLoss: imProjects.scoreLoss,\r\n            scoreDelivery: imProjects.scoreDelivery,\r\n            scoreOperations: imProjects.scoreOperations,\r\n            scoreWhy: imProjects.scoreWhy,\r\n            javaServices: imProjects.javaServices,\r\n            netServices: imProjects.netServices,\r\n            collectionLink: imProjects.collectionLink,\r\n            trainingLink: imProjects.trainingLink,\r\n            collectionName: imProjects.collectionName,\r\n            trainingName: imProjects.trainingName,\r\n            trainingDoc: imProjects.trainingDoc,\r\n            testingRichtext: imProjects.testingRichtext,\r\n            templateCategory: imProjects.templateCategory,\r\n            dType: imProjects.dType,\r\n            dOption: imProjects.dOption,\r\n            dFilter: imProjects.dFilter,\r\n            dId: imProjects.dId,\r\n            tType: imProjects.tType,\r\n            tOption: imProjects.tOption,\r\n            tFilter: imProjects.tFilter,\r\n            tId: imProjects.tId,\r\n            risktype: imProjects.risktype,\r\n            riskimpact: imProjects.riskimpact,\r\n            riskprobability: imProjects.riskprobability,\r\n            projectInitiativeId: imProjects.projectInitiativeId,\r\n            projectBusinessgoalId: imProjects.projectBusinessgoalId,\r\n            projectSubgoalId: imProjects.projectSubgoalId,\r\n            projectMaingoalId: imProjects.projectMaingoalId,\r\n            projectBucketId: imProjects.projectBucketId,\r\n            projectCostCenterId: imProjects.projectCostCenterId,\r\n            opportunityPriorityId: imProjects.opportunityPriorityId,\r\n            backlogPractice: imProjects.backlogPractice,\r\n            projectTheme: imProjects.projectTheme,\r\n            projectClass: imProjects.projectClass,\r\n            projectVertical: imProjects.projectVertical,\r\n            projectBoardId: imProjects.projectBoardId,\r\n            projectBoard2Id: imProjects.projectBoard2Id,\r\n            projectStatusId: imProjects.projectStatusId,\r\n            projectTypeId: imProjects.projectTypeId,\r\n            projectLeadId: imProjects.projectLeadId,\r\n            parentId: imProjects.parentId\r\n        });\r\n    }\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n    save() {\r\n        this.isSaving = true;\r\n        const imProjects = this.createFromForm();\r\n        if (imProjects.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.imProjectsService.update(imProjects));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.imProjectsService.create(imProjects));\r\n        }\r\n    }\r\n    createFromForm() {\r\n        const entity = Object.assign({}, new im_projects_model_1.ImProjects(), { id: this.editForm.get(['id']).value, projectName: this.editForm.get(['projectName']).value, projectNr: this.editForm.get(['projectNr']).value, projectPath: this.editForm.get(['projectPath']).value, treeSortkey: this.editForm.get(['treeSortkey']).value, maxChildSortkey: this.editForm.get(['maxChildSortkey']).value, description: this.editForm.get(['description']).value, billingTypeId: this.editForm.get(['billingTypeId']).value, note: this.editForm.get(['note']).value, requiresReportP: this.editForm.get(['requiresReportP']).value, projectBudget: this.editForm.get(['projectBudget']).value, projectRisk: this.editForm.get(['projectRisk']).value, corporateSponsor: this.editForm.get(['corporateSponsor']).value, percentCompleted: this.editForm.get(['percentCompleted']).value, projectBudgetHours: this.editForm.get(['projectBudgetHours']).value, costQuotesCache: this.editForm.get(['costQuotesCache']).value, costInvoicesCache: this.editForm.get(['costInvoicesCache']).value, costTimesheetPlannedCache: this.editForm.get(['costTimesheetPlannedCache']).value, costPurchaseOrdersCache: this.editForm.get(['costPurchaseOrdersCache']).value, costBillsCache: this.editForm.get(['costBillsCache']).value, costTimesheetLoggedCache: this.editForm.get(['costTimesheetLoggedCache']).value, endDate: this.editForm.get(['endDate']).value != null ? moment(this.editForm.get(['endDate']).value, input_constants_1.DATE_TIME_FORMAT) : undefined, startDate: this.editForm.get(['startDate']).value != null ? moment(this.editForm.get(['startDate']).value, input_constants_1.DATE_TIME_FORMAT) : undefined, templateP: this.editForm.get(['templateP']).value, sortOrder: this.editForm.get(['sortOrder']).value, reportedHoursCache: this.editForm.get(['reportedHoursCache']).value, costExpensePlannedCache: this.editForm.get(['costExpensePlannedCache']).value, costExpenseLoggedCache: this.editForm.get(['costExpenseLoggedCache']).value, confirmDate: this.editForm.get(['confirmDate']).value != null ? moment(this.editForm.get(['confirmDate']).value, input_constants_1.DATE_TIME_FORMAT) : undefined, costDeliveryNotesCache: this.editForm.get(['costDeliveryNotesCache']).value, costCacheDirty: this.editForm.get(['costCacheDirty']).value != null\r\n                ? moment(this.editForm.get(['costCacheDirty']).value, input_constants_1.DATE_TIME_FORMAT)\r\n                : undefined, milestoneP: this.editForm.get(['milestoneP']).value, releaseItemP: this.editForm.get(['releaseItemP']).value, presalesProbability: this.editForm.get(['presalesProbability']).value, presalesValue: this.editForm.get(['presalesValue']).value, reportedDaysCache: this.editForm.get(['reportedDaysCache']).value, presalesValueCurrency: this.editForm.get(['presalesValueCurrency']).value, opportunitySalesStageId: this.editForm.get(['opportunitySalesStageId']).value, opportunityCampaignId: this.editForm.get(['opportunityCampaignId']).value, scoreRevenue: this.editForm.get(['scoreRevenue']).value, scoreStrategic: this.editForm.get(['scoreStrategic']).value, scoreFinanceNpv: this.editForm.get(['scoreFinanceNpv']).value, scoreCustomers: this.editForm.get(['scoreCustomers']).value, scoreFinanceCost: this.editForm.get(['scoreFinanceCost']).value, costBillsPlanned: this.editForm.get(['costBillsPlanned']).value, costExpensesPlanned: this.editForm.get(['costExpensesPlanned']).value, scoreRisk: this.editForm.get(['scoreRisk']).value, scoreCapabilities: this.editForm.get(['scoreCapabilities']).value, scoreEinanceRoi: this.editForm.get(['scoreEinanceRoi']).value, projectUserwiseBoard: this.editForm.get(['projectUserwiseBoard']).value, projectBringNextday: this.editForm.get(['projectBringNextday']).value, projectBringSameboard: this.editForm.get(['projectBringSameboard']).value, projectNewboardEverytime: this.editForm.get(['projectNewboardEverytime']).value, projectUserwiseBoard2: this.editForm.get(['projectUserwiseBoard2']).value, projectBringSameboard2: this.editForm.get(['projectBringSameboard2']).value, projectNewboard2Everytime: this.editForm.get(['projectNewboard2Everytime']).value, projectNewboard2Always: this.editForm.get(['projectNewboard2Always']).value, projectReportWeekly: this.editForm.get(['projectReportWeekly']).value, scoreGain: this.editForm.get(['scoreGain']).value, scoreLoss: this.editForm.get(['scoreLoss']).value, scoreDelivery: this.editForm.get(['scoreDelivery']).value, scoreOperations: this.editForm.get(['scoreOperations']).value, scoreWhy: this.editForm.get(['scoreWhy']).value, javaServices: this.editForm.get(['javaServices']).value, netServices: this.editForm.get(['netServices']).value, collectionLink: this.editForm.get(['collectionLink']).value, trainingLink: this.editForm.get(['trainingLink']).value, collectionName: this.editForm.get(['collectionName']).value, trainingName: this.editForm.get(['trainingName']).value, trainingDoc: this.editForm.get(['trainingDoc']).value, testingRichtext: this.editForm.get(['testingRichtext']).value, templateCategory: this.editForm.get(['templateCategory']).value, dType: this.editForm.get(['dType']).value, dOption: this.editForm.get(['dOption']).value, dFilter: this.editForm.get(['dFilter']).value, dId: this.editForm.get(['dId']).value, tType: this.editForm.get(['tType']).value, tOption: this.editForm.get(['tOption']).value, tFilter: this.editForm.get(['tFilter']).value, tId: this.editForm.get(['tId']).value, risktype: this.editForm.get(['risktype']).value, riskimpact: this.editForm.get(['riskimpact']).value, riskprobability: this.editForm.get(['riskprobability']).value, projectInitiativeId: this.editForm.get(['projectInitiativeId']).value, projectBusinessgoalId: this.editForm.get(['projectBusinessgoalId']).value, projectSubgoalId: this.editForm.get(['projectSubgoalId']).value, projectMaingoalId: this.editForm.get(['projectMaingoalId']).value, projectBucketId: this.editForm.get(['projectBucketId']).value, projectCostCenterId: this.editForm.get(['projectCostCenterId']).value, opportunityPriorityId: this.editForm.get(['opportunityPriorityId']).value, backlogPractice: this.editForm.get(['backlogPractice']).value, projectTheme: this.editForm.get(['projectTheme']).value, projectClass: this.editForm.get(['projectClass']).value, projectVertical: this.editForm.get(['projectVertical']).value, projectBoardId: this.editForm.get(['projectBoardId']).value, projectBoard2Id: this.editForm.get(['projectBoard2Id']).value, projectStatusId: this.editForm.get(['projectStatusId']).value, projectTypeId: this.editForm.get(['projectTypeId']).value, projectLeadId: this.editForm.get(['projectLeadId']).value, parentId: this.editForm.get(['parentId']).value });\r\n        return entity;\r\n    }\r\n    subscribeToSaveResponse(result) {\r\n        result.subscribe((res) => this.onSaveSuccess(), (res) => this.onSaveError());\r\n    }\r\n    onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n    onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n    onError(errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n    trackProjectInitiativeIdById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackProjectBusinessgoalIdById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackProjectSubgoalIdById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackProjectMaingoalIdById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackProjectBucketIdById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackProjectCostCenterIdById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackOpportunityPriorityIdById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackBacklogPracticeById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackProjectThemeById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackProjectClassById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackProjectVerticalById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackProjectBoardIdById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackProjectStatusIdById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackProjectTypeIdById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackImEmployeeById(index, item) {\r\n        return item.id;\r\n    }\r\n    trackImProjectsById(index, item) {\r\n        return item.id;\r\n    }\r\n};\r\nImProjectsUpdateComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-im-projects-update',\r\n        templateUrl: './im-projects-update.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof im_projects_service_1.ImProjectsService !== \"undefined\" && im_projects_service_1.ImProjectsService) === \"function\" ? _b : Object, typeof (_c = typeof project_initiative_id_1.ProjectInitiativeIdService !== \"undefined\" && project_initiative_id_1.ProjectInitiativeIdService) === \"function\" ? _c : Object, typeof (_d = typeof project_businessgoal_id_1.ProjectBusinessgoalIdService !== \"undefined\" && project_businessgoal_id_1.ProjectBusinessgoalIdService) === \"function\" ? _d : Object, typeof (_e = typeof project_subgoal_id_1.ProjectSubgoalIdService !== \"undefined\" && project_subgoal_id_1.ProjectSubgoalIdService) === \"function\" ? _e : Object, typeof (_f = typeof project_maingoal_id_1.ProjectMaingoalIdService !== \"undefined\" && project_maingoal_id_1.ProjectMaingoalIdService) === \"function\" ? _f : Object, typeof (_g = typeof project_bucket_id_1.ProjectBucketIdService !== \"undefined\" && project_bucket_id_1.ProjectBucketIdService) === \"function\" ? _g : Object, typeof (_h = typeof project_cost_center_id_1.ProjectCostCenterIdService !== \"undefined\" && project_cost_center_id_1.ProjectCostCenterIdService) === \"function\" ? _h : Object, typeof (_j = typeof opportunity_priority_id_1.OpportunityPriorityIdService !== \"undefined\" && opportunity_priority_id_1.OpportunityPriorityIdService) === \"function\" ? _j : Object, typeof (_k = typeof backlog_practice_1.BacklogPracticeService !== \"undefined\" && backlog_practice_1.BacklogPracticeService) === \"function\" ? _k : Object, typeof (_l = typeof project_theme_1.ProjectThemeService !== \"undefined\" && project_theme_1.ProjectThemeService) === \"function\" ? _l : Object, typeof (_m = typeof project_class_1.ProjectClassService !== \"undefined\" && project_class_1.ProjectClassService) === \"function\" ? _m : Object, typeof (_o = typeof project_vertical_1.ProjectVerticalService !== \"undefined\" && project_vertical_1.ProjectVerticalService) === \"function\" ? _o : Object, typeof (_p = typeof project_board_id_1.ProjectBoardIdService !== \"undefined\" && project_board_id_1.ProjectBoardIdService) === \"function\" ? _p : Object, typeof (_q = typeof project_status_id_1.ProjectStatusIdService !== \"undefined\" && project_status_id_1.ProjectStatusIdService) === \"function\" ? _q : Object, typeof (_r = typeof project_type_id_1.ProjectTypeIdService !== \"undefined\" && project_type_id_1.ProjectTypeIdService) === \"function\" ? _r : Object, typeof (_s = typeof im_employee_1.ImEmployeeService !== \"undefined\" && im_employee_1.ImEmployeeService) === \"function\" ? _s : Object, typeof (_t = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _t : Object, typeof (_u = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _u : Object])\r\n], ImProjectsUpdateComponent);\r\nexports.ImProjectsUpdateComponent = ImProjectsUpdateComponent;\r\n",{"version":3,"file":"F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\im-projects\\im-projects-update.component.ts","sourceRoot":"","sources":["F:\\25june\\PMQJava\\node_modules\\angular-router-loader\\src\\index.js!F:\\25june\\PMQJava\\node_modules\\tslint-loader\\index.js!F:\\25june\\PMQJava\\src\\main\\webapp\\app\\entities\\im-projects\\im-projects-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\nimport { JhiAlertService } from 'ng-jhipster';\nimport { IImProjects, ImProjects } from 'app/shared/model/im-projects.model';\nimport { ImProjectsService } from './im-projects.service';\nimport { IProjectInitiativeId } from 'app/shared/model/project-initiative-id.model';\nimport { ProjectInitiativeIdService } from 'app/entities/project-initiative-id';\nimport { IProjectBusinessgoalId } from 'app/shared/model/project-businessgoal-id.model';\nimport { ProjectBusinessgoalIdService } from 'app/entities/project-businessgoal-id';\nimport { IProjectSubgoalId } from 'app/shared/model/project-subgoal-id.model';\nimport { ProjectSubgoalIdService } from 'app/entities/project-subgoal-id';\nimport { IProjectMaingoalId } from 'app/shared/model/project-maingoal-id.model';\nimport { ProjectMaingoalIdService } from 'app/entities/project-maingoal-id';\nimport { IProjectBucketId } from 'app/shared/model/project-bucket-id.model';\nimport { ProjectBucketIdService } from 'app/entities/project-bucket-id';\nimport { IProjectCostCenterId } from 'app/shared/model/project-cost-center-id.model';\nimport { ProjectCostCenterIdService } from 'app/entities/project-cost-center-id';\nimport { IOpportunityPriorityId } from 'app/shared/model/opportunity-priority-id.model';\nimport { OpportunityPriorityIdService } from 'app/entities/opportunity-priority-id';\nimport { IBacklogPractice } from 'app/shared/model/backlog-practice.model';\nimport { BacklogPracticeService } from 'app/entities/backlog-practice';\nimport { IProjectTheme } from 'app/shared/model/project-theme.model';\nimport { ProjectThemeService } from 'app/entities/project-theme';\nimport { IProjectClass } from 'app/shared/model/project-class.model';\nimport { ProjectClassService } from 'app/entities/project-class';\nimport { IProjectVertical } from 'app/shared/model/project-vertical.model';\nimport { ProjectVerticalService } from 'app/entities/project-vertical';\nimport { IProjectBoardId } from 'app/shared/model/project-board-id.model';\nimport { ProjectBoardIdService } from 'app/entities/project-board-id';\nimport { IProjectStatusId } from 'app/shared/model/project-status-id.model';\nimport { ProjectStatusIdService } from 'app/entities/project-status-id';\nimport { IProjectTypeId } from 'app/shared/model/project-type-id.model';\nimport { ProjectTypeIdService } from 'app/entities/project-type-id';\nimport { IImEmployee } from 'app/shared/model/im-employee.model';\nimport { ImEmployeeService } from 'app/entities/im-employee';\n\n@Component({\n  selector: 'jhi-im-projects-update',\n  templateUrl: './im-projects-update.component.html'\n})\nexport class ImProjectsUpdateComponent implements OnInit {\n  imProjects: IImProjects;\n  isSaving: boolean;\n\n  projectinitiativeids: IProjectInitiativeId[];\n\n  projectbusinessgoalids: IProjectBusinessgoalId[];\n\n  projectsubgoalids: IProjectSubgoalId[];\n\n  projectmaingoalids: IProjectMaingoalId[];\n\n  projectbucketids: IProjectBucketId[];\n\n  projectcostcenterids: IProjectCostCenterId[];\n\n  opportunitypriorityids: IOpportunityPriorityId[];\n\n  backlogpractices: IBacklogPractice[];\n\n  projectthemes: IProjectTheme[];\n\n  projectclasses: IProjectClass[];\n\n  projectverticals: IProjectVertical[];\n\n  projectboardids: IProjectBoardId[];\n\n  projectstatusids: IProjectStatusId[];\n\n  projecttypeids: IProjectTypeId[];\n\n  imemployees: IImEmployee[];\n\n  improjects: IImProjects[];\n\n  editForm = this.fb.group({\n    id: [],\n    projectName: [null, [Validators.required]],\n    projectNr: [null, [Validators.required]],\n    projectPath: [null, [Validators.required]],\n    treeSortkey: [],\n    maxChildSortkey: [],\n    description: [],\n    billingTypeId: [],\n    note: [],\n    requiresReportP: [],\n    projectBudget: [],\n    projectRisk: [],\n    corporateSponsor: [],\n    percentCompleted: [],\n    projectBudgetHours: [],\n    costQuotesCache: [],\n    costInvoicesCache: [],\n    costTimesheetPlannedCache: [],\n    costPurchaseOrdersCache: [],\n    costBillsCache: [],\n    costTimesheetLoggedCache: [],\n    endDate: [],\n    startDate: [],\n    templateP: [],\n    sortOrder: [],\n    reportedHoursCache: [],\n    costExpensePlannedCache: [],\n    costExpenseLoggedCache: [],\n    confirmDate: [],\n    costDeliveryNotesCache: [],\n    costCacheDirty: [],\n    milestoneP: [],\n    releaseItemP: [],\n    presalesProbability: [],\n    presalesValue: [],\n    reportedDaysCache: [],\n    presalesValueCurrency: [],\n    opportunitySalesStageId: [],\n    opportunityCampaignId: [],\n    scoreRevenue: [],\n    scoreStrategic: [],\n    scoreFinanceNpv: [],\n    scoreCustomers: [],\n    scoreFinanceCost: [],\n    costBillsPlanned: [],\n    costExpensesPlanned: [],\n    scoreRisk: [],\n    scoreCapabilities: [],\n    scoreEinanceRoi: [],\n    projectUserwiseBoard: [],\n    projectBringNextday: [],\n    projectBringSameboard: [],\n    projectNewboardEverytime: [],\n    projectUserwiseBoard2: [],\n    projectBringSameboard2: [],\n    projectNewboard2Everytime: [],\n    projectNewboard2Always: [],\n    projectReportWeekly: [],\n    scoreGain: [],\n    scoreLoss: [],\n    scoreDelivery: [],\n    scoreOperations: [],\n    scoreWhy: [],\n    javaServices: [],\n    netServices: [],\n    collectionLink: [],\n    trainingLink: [],\n    collectionName: [],\n    trainingName: [],\n    trainingDoc: [],\n    testingRichtext: [],\n    templateCategory: [],\n    dType: [],\n    dOption: [],\n    dFilter: [],\n    dId: [],\n    tType: [],\n    tOption: [],\n    tFilter: [],\n    tId: [],\n    risktype: [],\n    riskimpact: [],\n    riskprobability: [],\n    projectInitiativeId: [],\n    projectBusinessgoalId: [],\n    projectSubgoalId: [],\n    projectMaingoalId: [],\n    projectBucketId: [],\n    projectCostCenterId: [],\n    opportunityPriorityId: [],\n    backlogPractice: [],\n    projectTheme: [],\n    projectClass: [],\n    projectVertical: [],\n    projectBoardId: [],\n    projectBoard2Id: [],\n    projectStatusId: [],\n    projectTypeId: [],\n    projectLeadId: [],\n    parentId: []\n  });\n\n  constructor(\n    protected jhiAlertService: JhiAlertService,\n    protected imProjectsService: ImProjectsService,\n    protected projectInitiativeIdService: ProjectInitiativeIdService,\n    protected projectBusinessgoalIdService: ProjectBusinessgoalIdService,\n    protected projectSubgoalIdService: ProjectSubgoalIdService,\n    protected projectMaingoalIdService: ProjectMaingoalIdService,\n    protected projectBucketIdService: ProjectBucketIdService,\n    protected projectCostCenterIdService: ProjectCostCenterIdService,\n    protected opportunityPriorityIdService: OpportunityPriorityIdService,\n    protected backlogPracticeService: BacklogPracticeService,\n    protected projectThemeService: ProjectThemeService,\n    protected projectClassService: ProjectClassService,\n    protected projectVerticalService: ProjectVerticalService,\n    protected projectBoardIdService: ProjectBoardIdService,\n    protected projectStatusIdService: ProjectStatusIdService,\n    protected projectTypeIdService: ProjectTypeIdService,\n    protected imEmployeeService: ImEmployeeService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.isSaving = false;\n    this.activatedRoute.data.subscribe(({ imProjects }) => {\n      this.updateForm(imProjects);\n      this.imProjects = imProjects;\n    });\n    this.projectInitiativeIdService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectInitiativeId[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectInitiativeId[]>) => response.body)\n      )\n      .subscribe((res: IProjectInitiativeId[]) => (this.projectinitiativeids = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.projectBusinessgoalIdService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectBusinessgoalId[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectBusinessgoalId[]>) => response.body)\n      )\n      .subscribe(\n        (res: IProjectBusinessgoalId[]) => (this.projectbusinessgoalids = res),\n        (res: HttpErrorResponse) => this.onError(res.message)\n      );\n    this.projectSubgoalIdService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectSubgoalId[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectSubgoalId[]>) => response.body)\n      )\n      .subscribe((res: IProjectSubgoalId[]) => (this.projectsubgoalids = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.projectMaingoalIdService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectMaingoalId[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectMaingoalId[]>) => response.body)\n      )\n      .subscribe((res: IProjectMaingoalId[]) => (this.projectmaingoalids = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.projectBucketIdService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectBucketId[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectBucketId[]>) => response.body)\n      )\n      .subscribe((res: IProjectBucketId[]) => (this.projectbucketids = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.projectCostCenterIdService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectCostCenterId[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectCostCenterId[]>) => response.body)\n      )\n      .subscribe((res: IProjectCostCenterId[]) => (this.projectcostcenterids = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.opportunityPriorityIdService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IOpportunityPriorityId[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IOpportunityPriorityId[]>) => response.body)\n      )\n      .subscribe(\n        (res: IOpportunityPriorityId[]) => (this.opportunitypriorityids = res),\n        (res: HttpErrorResponse) => this.onError(res.message)\n      );\n    this.backlogPracticeService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IBacklogPractice[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IBacklogPractice[]>) => response.body)\n      )\n      .subscribe((res: IBacklogPractice[]) => (this.backlogpractices = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.projectThemeService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectTheme[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectTheme[]>) => response.body)\n      )\n      .subscribe((res: IProjectTheme[]) => (this.projectthemes = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.projectClassService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectClass[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectClass[]>) => response.body)\n      )\n      .subscribe((res: IProjectClass[]) => (this.projectclasses = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.projectVerticalService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectVertical[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectVertical[]>) => response.body)\n      )\n      .subscribe((res: IProjectVertical[]) => (this.projectverticals = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.projectBoardIdService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectBoardId[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectBoardId[]>) => response.body)\n      )\n      .subscribe((res: IProjectBoardId[]) => (this.projectboardids = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.projectStatusIdService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectStatusId[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectStatusId[]>) => response.body)\n      )\n      .subscribe((res: IProjectStatusId[]) => (this.projectstatusids = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.projectTypeIdService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IProjectTypeId[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IProjectTypeId[]>) => response.body)\n      )\n      .subscribe((res: IProjectTypeId[]) => (this.projecttypeids = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.imEmployeeService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IImEmployee[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IImEmployee[]>) => response.body)\n      )\n      .subscribe((res: IImEmployee[]) => (this.imemployees = res), (res: HttpErrorResponse) => this.onError(res.message));\n    this.imProjectsService\n      .query()\n      .pipe(\n        filter((mayBeOk: HttpResponse<IImProjects[]>) => mayBeOk.ok),\n        map((response: HttpResponse<IImProjects[]>) => response.body)\n      )\n      .subscribe((res: IImProjects[]) => (this.improjects = res), (res: HttpErrorResponse) => this.onError(res.message));\n  }\n\n  updateForm(imProjects: IImProjects) {\n    this.editForm.patchValue({\n      id: imProjects.id,\n      projectName: imProjects.projectName,\n      projectNr: imProjects.projectNr,\n      projectPath: imProjects.projectPath,\n      treeSortkey: imProjects.treeSortkey,\n      maxChildSortkey: imProjects.maxChildSortkey,\n      description: imProjects.description,\n      billingTypeId: imProjects.billingTypeId,\n      note: imProjects.note,\n      requiresReportP: imProjects.requiresReportP,\n      projectBudget: imProjects.projectBudget,\n      projectRisk: imProjects.projectRisk,\n      corporateSponsor: imProjects.corporateSponsor,\n      percentCompleted: imProjects.percentCompleted,\n      projectBudgetHours: imProjects.projectBudgetHours,\n      costQuotesCache: imProjects.costQuotesCache,\n      costInvoicesCache: imProjects.costInvoicesCache,\n      costTimesheetPlannedCache: imProjects.costTimesheetPlannedCache,\n      costPurchaseOrdersCache: imProjects.costPurchaseOrdersCache,\n      costBillsCache: imProjects.costBillsCache,\n      costTimesheetLoggedCache: imProjects.costTimesheetLoggedCache,\n      endDate: imProjects.endDate != null ? imProjects.endDate.format(DATE_TIME_FORMAT) : null,\n      startDate: imProjects.startDate != null ? imProjects.startDate.format(DATE_TIME_FORMAT) : null,\n      templateP: imProjects.templateP,\n      sortOrder: imProjects.sortOrder,\n      reportedHoursCache: imProjects.reportedHoursCache,\n      costExpensePlannedCache: imProjects.costExpensePlannedCache,\n      costExpenseLoggedCache: imProjects.costExpenseLoggedCache,\n      confirmDate: imProjects.confirmDate != null ? imProjects.confirmDate.format(DATE_TIME_FORMAT) : null,\n      costDeliveryNotesCache: imProjects.costDeliveryNotesCache,\n      costCacheDirty: imProjects.costCacheDirty != null ? imProjects.costCacheDirty.format(DATE_TIME_FORMAT) : null,\n      milestoneP: imProjects.milestoneP,\n      releaseItemP: imProjects.releaseItemP,\n      presalesProbability: imProjects.presalesProbability,\n      presalesValue: imProjects.presalesValue,\n      reportedDaysCache: imProjects.reportedDaysCache,\n      presalesValueCurrency: imProjects.presalesValueCurrency,\n      opportunitySalesStageId: imProjects.opportunitySalesStageId,\n      opportunityCampaignId: imProjects.opportunityCampaignId,\n      scoreRevenue: imProjects.scoreRevenue,\n      scoreStrategic: imProjects.scoreStrategic,\n      scoreFinanceNpv: imProjects.scoreFinanceNpv,\n      scoreCustomers: imProjects.scoreCustomers,\n      scoreFinanceCost: imProjects.scoreFinanceCost,\n      costBillsPlanned: imProjects.costBillsPlanned,\n      costExpensesPlanned: imProjects.costExpensesPlanned,\n      scoreRisk: imProjects.scoreRisk,\n      scoreCapabilities: imProjects.scoreCapabilities,\n      scoreEinanceRoi: imProjects.scoreEinanceRoi,\n      projectUserwiseBoard: imProjects.projectUserwiseBoard,\n      projectBringNextday: imProjects.projectBringNextday,\n      projectBringSameboard: imProjects.projectBringSameboard,\n      projectNewboardEverytime: imProjects.projectNewboardEverytime,\n      projectUserwiseBoard2: imProjects.projectUserwiseBoard2,\n      projectBringSameboard2: imProjects.projectBringSameboard2,\n      projectNewboard2Everytime: imProjects.projectNewboard2Everytime,\n      projectNewboard2Always: imProjects.projectNewboard2Always,\n      projectReportWeekly: imProjects.projectReportWeekly,\n      scoreGain: imProjects.scoreGain,\n      scoreLoss: imProjects.scoreLoss,\n      scoreDelivery: imProjects.scoreDelivery,\n      scoreOperations: imProjects.scoreOperations,\n      scoreWhy: imProjects.scoreWhy,\n      javaServices: imProjects.javaServices,\n      netServices: imProjects.netServices,\n      collectionLink: imProjects.collectionLink,\n      trainingLink: imProjects.trainingLink,\n      collectionName: imProjects.collectionName,\n      trainingName: imProjects.trainingName,\n      trainingDoc: imProjects.trainingDoc,\n      testingRichtext: imProjects.testingRichtext,\n      templateCategory: imProjects.templateCategory,\n      dType: imProjects.dType,\n      dOption: imProjects.dOption,\n      dFilter: imProjects.dFilter,\n      dId: imProjects.dId,\n      tType: imProjects.tType,\n      tOption: imProjects.tOption,\n      tFilter: imProjects.tFilter,\n      tId: imProjects.tId,\n      risktype: imProjects.risktype,\n      riskimpact: imProjects.riskimpact,\n      riskprobability: imProjects.riskprobability,\n      projectInitiativeId: imProjects.projectInitiativeId,\n      projectBusinessgoalId: imProjects.projectBusinessgoalId,\n      projectSubgoalId: imProjects.projectSubgoalId,\n      projectMaingoalId: imProjects.projectMaingoalId,\n      projectBucketId: imProjects.projectBucketId,\n      projectCostCenterId: imProjects.projectCostCenterId,\n      opportunityPriorityId: imProjects.opportunityPriorityId,\n      backlogPractice: imProjects.backlogPractice,\n      projectTheme: imProjects.projectTheme,\n      projectClass: imProjects.projectClass,\n      projectVertical: imProjects.projectVertical,\n      projectBoardId: imProjects.projectBoardId,\n      projectBoard2Id: imProjects.projectBoard2Id,\n      projectStatusId: imProjects.projectStatusId,\n      projectTypeId: imProjects.projectTypeId,\n      projectLeadId: imProjects.projectLeadId,\n      parentId: imProjects.parentId\n    });\n  }\n\n  previousState() {\n    window.history.back();\n  }\n\n  save() {\n    this.isSaving = true;\n    const imProjects = this.createFromForm();\n    if (imProjects.id !== undefined) {\n      this.subscribeToSaveResponse(this.imProjectsService.update(imProjects));\n    } else {\n      this.subscribeToSaveResponse(this.imProjectsService.create(imProjects));\n    }\n  }\n\n  private createFromForm(): IImProjects {\n    const entity = {\n      ...new ImProjects(),\n      id: this.editForm.get(['id']).value,\n      projectName: this.editForm.get(['projectName']).value,\n      projectNr: this.editForm.get(['projectNr']).value,\n      projectPath: this.editForm.get(['projectPath']).value,\n      treeSortkey: this.editForm.get(['treeSortkey']).value,\n      maxChildSortkey: this.editForm.get(['maxChildSortkey']).value,\n      description: this.editForm.get(['description']).value,\n      billingTypeId: this.editForm.get(['billingTypeId']).value,\n      note: this.editForm.get(['note']).value,\n      requiresReportP: this.editForm.get(['requiresReportP']).value,\n      projectBudget: this.editForm.get(['projectBudget']).value,\n      projectRisk: this.editForm.get(['projectRisk']).value,\n      corporateSponsor: this.editForm.get(['corporateSponsor']).value,\n      percentCompleted: this.editForm.get(['percentCompleted']).value,\n      projectBudgetHours: this.editForm.get(['projectBudgetHours']).value,\n      costQuotesCache: this.editForm.get(['costQuotesCache']).value,\n      costInvoicesCache: this.editForm.get(['costInvoicesCache']).value,\n      costTimesheetPlannedCache: this.editForm.get(['costTimesheetPlannedCache']).value,\n      costPurchaseOrdersCache: this.editForm.get(['costPurchaseOrdersCache']).value,\n      costBillsCache: this.editForm.get(['costBillsCache']).value,\n      costTimesheetLoggedCache: this.editForm.get(['costTimesheetLoggedCache']).value,\n      endDate: this.editForm.get(['endDate']).value != null ? moment(this.editForm.get(['endDate']).value, DATE_TIME_FORMAT) : undefined,\n      startDate:\n        this.editForm.get(['startDate']).value != null ? moment(this.editForm.get(['startDate']).value, DATE_TIME_FORMAT) : undefined,\n      templateP: this.editForm.get(['templateP']).value,\n      sortOrder: this.editForm.get(['sortOrder']).value,\n      reportedHoursCache: this.editForm.get(['reportedHoursCache']).value,\n      costExpensePlannedCache: this.editForm.get(['costExpensePlannedCache']).value,\n      costExpenseLoggedCache: this.editForm.get(['costExpenseLoggedCache']).value,\n      confirmDate:\n        this.editForm.get(['confirmDate']).value != null ? moment(this.editForm.get(['confirmDate']).value, DATE_TIME_FORMAT) : undefined,\n      costDeliveryNotesCache: this.editForm.get(['costDeliveryNotesCache']).value,\n      costCacheDirty:\n        this.editForm.get(['costCacheDirty']).value != null\n          ? moment(this.editForm.get(['costCacheDirty']).value, DATE_TIME_FORMAT)\n          : undefined,\n      milestoneP: this.editForm.get(['milestoneP']).value,\n      releaseItemP: this.editForm.get(['releaseItemP']).value,\n      presalesProbability: this.editForm.get(['presalesProbability']).value,\n      presalesValue: this.editForm.get(['presalesValue']).value,\n      reportedDaysCache: this.editForm.get(['reportedDaysCache']).value,\n      presalesValueCurrency: this.editForm.get(['presalesValueCurrency']).value,\n      opportunitySalesStageId: this.editForm.get(['opportunitySalesStageId']).value,\n      opportunityCampaignId: this.editForm.get(['opportunityCampaignId']).value,\n      scoreRevenue: this.editForm.get(['scoreRevenue']).value,\n      scoreStrategic: this.editForm.get(['scoreStrategic']).value,\n      scoreFinanceNpv: this.editForm.get(['scoreFinanceNpv']).value,\n      scoreCustomers: this.editForm.get(['scoreCustomers']).value,\n      scoreFinanceCost: this.editForm.get(['scoreFinanceCost']).value,\n      costBillsPlanned: this.editForm.get(['costBillsPlanned']).value,\n      costExpensesPlanned: this.editForm.get(['costExpensesPlanned']).value,\n      scoreRisk: this.editForm.get(['scoreRisk']).value,\n      scoreCapabilities: this.editForm.get(['scoreCapabilities']).value,\n      scoreEinanceRoi: this.editForm.get(['scoreEinanceRoi']).value,\n      projectUserwiseBoard: this.editForm.get(['projectUserwiseBoard']).value,\n      projectBringNextday: this.editForm.get(['projectBringNextday']).value,\n      projectBringSameboard: this.editForm.get(['projectBringSameboard']).value,\n      projectNewboardEverytime: this.editForm.get(['projectNewboardEverytime']).value,\n      projectUserwiseBoard2: this.editForm.get(['projectUserwiseBoard2']).value,\n      projectBringSameboard2: this.editForm.get(['projectBringSameboard2']).value,\n      projectNewboard2Everytime: this.editForm.get(['projectNewboard2Everytime']).value,\n      projectNewboard2Always: this.editForm.get(['projectNewboard2Always']).value,\n      projectReportWeekly: this.editForm.get(['projectReportWeekly']).value,\n      scoreGain: this.editForm.get(['scoreGain']).value,\n      scoreLoss: this.editForm.get(['scoreLoss']).value,\n      scoreDelivery: this.editForm.get(['scoreDelivery']).value,\n      scoreOperations: this.editForm.get(['scoreOperations']).value,\n      scoreWhy: this.editForm.get(['scoreWhy']).value,\n      javaServices: this.editForm.get(['javaServices']).value,\n      netServices: this.editForm.get(['netServices']).value,\n      collectionLink: this.editForm.get(['collectionLink']).value,\n      trainingLink: this.editForm.get(['trainingLink']).value,\n      collectionName: this.editForm.get(['collectionName']).value,\n      trainingName: this.editForm.get(['trainingName']).value,\n      trainingDoc: this.editForm.get(['trainingDoc']).value,\n      testingRichtext: this.editForm.get(['testingRichtext']).value,\n      templateCategory: this.editForm.get(['templateCategory']).value,\n      dType: this.editForm.get(['dType']).value,\n      dOption: this.editForm.get(['dOption']).value,\n      dFilter: this.editForm.get(['dFilter']).value,\n      dId: this.editForm.get(['dId']).value,\n      tType: this.editForm.get(['tType']).value,\n      tOption: this.editForm.get(['tOption']).value,\n      tFilter: this.editForm.get(['tFilter']).value,\n      tId: this.editForm.get(['tId']).value,\n      risktype: this.editForm.get(['risktype']).value,\n      riskimpact: this.editForm.get(['riskimpact']).value,\n      riskprobability: this.editForm.get(['riskprobability']).value,\n      projectInitiativeId: this.editForm.get(['projectInitiativeId']).value,\n      projectBusinessgoalId: this.editForm.get(['projectBusinessgoalId']).value,\n      projectSubgoalId: this.editForm.get(['projectSubgoalId']).value,\n      projectMaingoalId: this.editForm.get(['projectMaingoalId']).value,\n      projectBucketId: this.editForm.get(['projectBucketId']).value,\n      projectCostCenterId: this.editForm.get(['projectCostCenterId']).value,\n      opportunityPriorityId: this.editForm.get(['opportunityPriorityId']).value,\n      backlogPractice: this.editForm.get(['backlogPractice']).value,\n      projectTheme: this.editForm.get(['projectTheme']).value,\n      projectClass: this.editForm.get(['projectClass']).value,\n      projectVertical: this.editForm.get(['projectVertical']).value,\n      projectBoardId: this.editForm.get(['projectBoardId']).value,\n      projectBoard2Id: this.editForm.get(['projectBoard2Id']).value,\n      projectStatusId: this.editForm.get(['projectStatusId']).value,\n      projectTypeId: this.editForm.get(['projectTypeId']).value,\n      projectLeadId: this.editForm.get(['projectLeadId']).value,\n      parentId: this.editForm.get(['parentId']).value\n    };\n    return entity;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IImProjects>>) {\n    result.subscribe((res: HttpResponse<IImProjects>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n  }\n\n  protected onSaveSuccess() {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError() {\n    this.isSaving = false;\n  }\n  protected onError(errorMessage: string) {\n    this.jhiAlertService.error(errorMessage, null, null);\n  }\n\n  trackProjectInitiativeIdById(index: number, item: IProjectInitiativeId) {\n    return item.id;\n  }\n\n  trackProjectBusinessgoalIdById(index: number, item: IProjectBusinessgoalId) {\n    return item.id;\n  }\n\n  trackProjectSubgoalIdById(index: number, item: IProjectSubgoalId) {\n    return item.id;\n  }\n\n  trackProjectMaingoalIdById(index: number, item: IProjectMaingoalId) {\n    return item.id;\n  }\n\n  trackProjectBucketIdById(index: number, item: IProjectBucketId) {\n    return item.id;\n  }\n\n  trackProjectCostCenterIdById(index: number, item: IProjectCostCenterId) {\n    return item.id;\n  }\n\n  trackOpportunityPriorityIdById(index: number, item: IOpportunityPriorityId) {\n    return item.id;\n  }\n\n  trackBacklogPracticeById(index: number, item: IBacklogPractice) {\n    return item.id;\n  }\n\n  trackProjectThemeById(index: number, item: IProjectTheme) {\n    return item.id;\n  }\n\n  trackProjectClassById(index: number, item: IProjectClass) {\n    return item.id;\n  }\n\n  trackProjectVerticalById(index: number, item: IProjectVertical) {\n    return item.id;\n  }\n\n  trackProjectBoardIdById(index: number, item: IProjectBoardId) {\n    return item.id;\n  }\n\n  trackProjectStatusIdById(index: number, item: IProjectStatusId) {\n    return item.id;\n  }\n\n  trackProjectTypeIdById(index: number, item: IProjectTypeId) {\n    return item.id;\n  }\n\n  trackImEmployeeById(index: number, item: IImEmployee) {\n    return item.id;\n  }\n\n  trackImProjectsById(index: number, item: IImProjects) {\n    return item.id;\n  }\n}\n"]}]}